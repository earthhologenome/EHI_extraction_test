[["index.html", "Earth Hologenome Initiative | Lauritsen et al. 2024 Robust, open-source, and automation-friendly DNA extraction protocol for hologenomic research 1 Introduction 1.1 Prepare the R environment", " Earth Hologenome Initiative | Lauritsen et al. 2024 Robust, open-source, and automation-friendly DNA extraction protocol for hologenomic research Jonas G. Laurisen, Christian Carøe, Nanna Gaun, Garazi Martin, Aoife Leonard, Raphael Eisenhofer, M Thomas P Gilbert, Ostaizka Aizpurua, Antton Alberdi1, Carlotta Pietroni 2025-04-23 1 Introduction This webbook contains all the code used for the comparative study on the generation of metagenomic data from faeces of various species using three extraction methods. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/earthhologenome/EHI_extraction_test.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(rairtable) library(devtools) library(tinytable) library(broom) library(broom.mixed) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(MuMIn) library(sjPlot) library(ggeffects) 1.1.3 Color codes vertebrate_colors &lt;- c(`Calotriton asper`=&quot;#157a73&quot;, `Lissotriton helveticus`=&quot;#47bfb6&quot;, `Salamandra atra`=&quot;#92d4d1&quot;, `Chalcides striatus`=&quot;#4a7015&quot;, `Natrix astreptophora`=&quot;#7ea845&quot;, `Podarcis muralis`=&quot;#b9d98d&quot;, `Plecotus auritus`=&quot;#5e1717&quot;, `Sciurus carolinensis`=&quot;#aa3333&quot;, `Trichosurus vulpecula`=&quot;#bf7777&quot;, `Geospizopsis unicolor`=&quot;#9e6b24&quot;, `Perisoreus infaustus`=&quot;#dba55a&quot;, `Zonotrichia capensis`=&quot;#dbbd93&quot;, `Extraction control`=&quot;#7a7a7a&quot;, `Library control`=&quot;#4a4a4a&quot;) University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["laboratory-performance.html", "2 Laboratory performance 2.1 Load data 2.2 DNA yield 2.3 Sample purity 2.4 Sample purity A260/A280 Ratios 2.5 Sample purity A260/A230 Ratios 2.6 Amplification performance", " 2 Laboratory performance 2.1 Load data Load data previously compiled from the database: all_data &lt;- read_tsv(&quot;data/all_data.tsv&quot;) %&gt;% filter(catalogue != &quot;Species&quot;) %&gt;% mutate( Taxon = factor(Taxon, levels = c( &quot;Amphibian&quot;, &quot;Reptile&quot;, &quot;Mammal&quot;, &quot;Bird&quot;, &quot;Control&quot; )), Extraction = factor(Extraction, levels = c( &quot;REF&quot;, &quot;DREX1&quot;, &quot;DREX2&quot; )) ) %&gt;% mutate(Species=factor(Species,levels=c(&quot;Calotriton asper&quot;, &quot;Lissotriton helveticus&quot;, &quot;Salamandra atra&quot;, &quot;Chalcides striatus&quot;, &quot;Natrix astreptophora&quot;, &quot;Podarcis muralis&quot;, &quot;Plecotus auritus&quot;, &quot;Sciurus carolinensis&quot;, &quot;Trichosurus vulpecula&quot;, &quot;Geospizopsis unicolor&quot;, &quot;Perisoreus infaustus&quot;, &quot;Zonotrichia capensis&quot;, &quot;Extraction control&quot;, &quot;Library control&quot;))) table(all_data$Sample) AAQ18 AAZ65 ABA95 ABD27 ABE10 ACB56 ACB61 AEC23 AEC24 3 3 3 3 3 3 3 3 3 AFO83 AFV18 AFV20 AGI41 AGI42 AGI58 AGI59 AGO69 AGZ59 3 3 3 3 3 3 3 3 3 AHU97 AHW91 AHW95 AIV55 AJP51 AJP52 C1_EXB0076 C1_LIB0072 C2_EXB0076 3 3 3 3 3 3 3 1 3 C2_LIB0072 1 2.2 DNA yield Total amount of DNA extracted from the 150 ul subset of the bead-beaten sample. all_data %&gt;% select(Extraction,extract,Taxon) %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.0f±%.0f&quot;, mean(extract), sd(extract))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of total DNA nanograms&quot;) .table td.tinytable_css_idwvd1bvfk1er5bscl72ag, .table th.tinytable_css_idwvd1bvfk1er5bscl72ag { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of total DNA nanograms Taxon REF DREX1 DREX2 Amphibian 297±350 340±475 1138±1195 Reptile 102±71 162±134 250±179 Mammal 448±432 256±224 867±730 Bird 71±134 11±11 44±45 Control 0±0 2±3 1±0 all_data %&gt;% select(Library,Species,Extraction,extract,Taxon) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction, y=extract, color=Species, group=Extraction))+ geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;DNA yield (ng)&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(log(extract) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot() all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(log(extract) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 9.7568 3.2523 3 8 3.9365 0.0537940 . Extraction 13.6941 6.8471 2 46 8.2877 0.0008436 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(log(extract) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idzzbiw15zmk4z81e44n17, .table th.tinytable_css_idzzbiw15zmk4z81e44n17 { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 5.32423764 0.6624785 8.03684581 8.902457 2.275553e-05 fixed NA TaxonReptile -0.86837312 0.9120619 -0.95209890 7.999997 3.689227e-01 fixed NA TaxonMammal -0.06459683 0.9120619 -0.07082505 7.999997 9.452755e-01 fixed NA TaxonBird -2.74514876 0.9120619 -3.00982728 7.999997 1.681798e-02 fixed NA ExtractionDREX1 -0.24661418 0.2623890 -0.93988004 46.000018 3.521886e-01 fixed NA ExtractionDREX2 0.77684194 0.2623890 2.96064983 46.000018 4.841350e-03 ran_pars Sample:Species sd__(Intercept) 0.58873659 NA NA NA NA ran_pars Species sd__(Intercept) 0.96787601 NA NA NA NA ran_pars Residual sd__Observation 0.90894215 NA NA NA NA all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(log(extract) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;),show.data = TRUE) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(log(extract) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% ggpredict(.,terms=&quot;Extraction&quot;) # Predicted values of extract Extraction | Predicted | 95% CI ---------------------------------------- REF | 205.25 | 54.62, 771.31 DREX1 | 160.39 | 42.68, 602.74 DREX2 | 446.34 | 118.77, 1677.29 Adjusted for: * Taxon = Amphibian * Sample = 0 (population-level) * Species = 0 (population-level) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(log(extract) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% ggpredict(.,terms=&quot;Taxon&quot;) # Predicted values of extract Taxon | Predicted | 95% CI ------------------------------------- Amphibian | 205.25 | 54.62, 771.31 Reptile | 86.13 | 22.92, 323.67 Mammal | 192.41 | 51.20, 723.06 Bird | 13.19 | 3.51, 49.55 Adjusted for: * Extraction = REF * Sample = 0 (population-level) * Species = 0 (population-level) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(log(extract) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;Species&quot;),pred.type = &quot;re&quot;,ci.lvl = NA)+ theme(axis.text.x = element_text(angle = 45, hjust = 1)) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(log(extract) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.4053742 0.7671254 2.3 Sample purity In common laboratory practice, DNA and RNA samples with A260/A280 and A260/A230 &gt; 1.8 are considered to be “clean”, and suitable for use in most downstream applications 2.4 Sample purity A260/A280 Ratios 260 nm and 280 nm are the absorbance wavelengths used to assess the type of nucleic acid present (DNA or RNA) and they provide a rough indication of purity. A reduction of this ratio typically indicates protein contamination while RNA contamination can be detected by an increase of this ratio. The generally accepted 260/280 values are ~1.8 for pure DNA and ~2.0 for RNA. Lower values may indicate the presence of protein, phenol or other contaminants that have an absorbance close to 280 nm. all_data %&gt;% filter(!is.na(x260_280)) %&gt;% select(Extraction, x260_280, Taxon) %&gt;% group_by(Extraction) %&gt;% #group_by(Taxon, Extraction) %&gt;% summarise(value = sprintf(&quot;%.2f±%.2f&quot;, mean(x260_280), sd(x260_280))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of 260/280 values&quot;) .table td.tinytable_css_idvpbiehdxm3rxv7tdgqab, .table th.tinytable_css_idvpbiehdxm3rxv7tdgqab { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of 260/280 values REF DREX1 DREX2 1.35±0.18 1.63±0.35 1.44±0.31 all_data %&gt;% filter(!is.na(x260_280)) %&gt;% mutate(d260_280=abs(1.8-x260_280)) %&gt;% select(Extraction, d260_280, Taxon) %&gt;% group_by(Taxon, Extraction) %&gt;% summarise(value = sprintf(&quot;%.2f±%.2f&quot;, mean(d260_280), sd(d260_280))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of the deviation of 260/280 values from 1.8&quot;) .table td.tinytable_css_idgv2xnh179e5es932k3zz, .table th.tinytable_css_idgv2xnh179e5es932k3zz { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of the deviation of 260/280 values from 1.8 Taxon REF DREX1 DREX2 Amphibian 0.57±0.15 0.33±0.13 0.24±0.14 Reptile 0.40±0.22 0.25±0.16 0.25±0.11 Mammal 0.53±0.12 0.23±0.21 0.43±0.22 Bird 0.35±0.12 0.46±0.24 0.68±0.33 Control 0.33±0.28 0.52±0.16 0.15±0.12 Higher deviation from 1.8 indicates lower purity of the DNA extracts all_data %&gt;% select(Extraction, x260_280, Taxon, Species) %&gt;% ggplot(aes(x=Extraction, y=x260_280, color=Species, group=Extraction))+ geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;260/280 values&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% filter(!is.na(x260_280),Taxon != &quot;Control&quot;) %&gt;% #filter(!is.na(x260_280),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_280=abs(1.8-x260_280)) %&gt;% lmerTest::lmer(rank(d260_280) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot() all_data %&gt;% filter(!is.na(x260_280),Taxon != &quot;Control&quot;) %&gt;% #filter(!is.na(x260_280),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_280=abs(1.8-x260_280)) %&gt;% lmerTest::lmer(rank(d260_280) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 2420.2 806.74 3 58 2.7091 0.05334 . Extraction 2166.8 1083.38 2 58 3.6381 0.03247 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 all_data %&gt;% filter(!is.na(x260_280),Taxon != &quot;Control&quot;) %&gt;% #filter(!is.na(x260_280),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_280=abs(1.8-x260_280)) %&gt;% lmerTest::lmer(rank(d260_280) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_iddq23zpgwha0fmi0j5sbm, .table th.tinytable_css_iddq23zpgwha0fmi0j5sbm { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 40.307144 5.621064 7.1707318 58 1.514226e-09 fixed NA TaxonReptile -7.547479 6.014439 -1.2548933 58 2.145505e-01 fixed NA TaxonMammal 1.592086 6.110570 0.2605462 58 7.953653e-01 fixed NA TaxonBird 9.812092 6.204784 1.5813754 58 1.192307e-01 fixed NA ExtractionDREX1 -14.625757 5.434118 -2.6914685 58 9.280304e-03 fixed NA ExtractionDREX2 -9.026627 5.442600 -1.6585137 58 1.026129e-01 ran_pars Sample:Species sd__(Intercept) 0.000000 NA NA NA NA ran_pars Species sd__(Intercept) 0.000000 NA NA NA NA ran_pars Residual sd__Observation 17.256500 NA NA NA NA all_data %&gt;% filter(!is.na(x260_280),Taxon != &quot;Control&quot;) %&gt;% #filter(!is.na(x260_280),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_280=abs(1.8-x260_280)) %&gt;% lmerTest::lmer(rank(d260_280) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;)) all_data %&gt;% filter(!is.na(x260_280),Taxon != &quot;Control&quot;) %&gt;% #filter(!is.na(x260_280),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_280=abs(1.8-x260_280)) %&gt;% lmerTest::lmer(rank(d260_280) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% ggpredict(.,terms=&quot;Extraction&quot;) # Predicted values of d260_280 Extraction | Predicted | 95% CI ------------------------------------- REF | 40.31 | 29.04, 51.57 DREX1 | 25.68 | 15.36, 36.00 DREX2 | 31.28 | 20.95, 41.61 Adjusted for: * Taxon = Amphibian * Sample = 0 (population-level) * Species = 0 (population-level) all_data %&gt;% filter(!is.na(x260_280),Taxon != &quot;Control&quot;) %&gt;% mutate(d260_280=abs(1.8-x260_280)) %&gt;% lmerTest::lmer(rank(d260_280) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.1957896 0.1957896 2.5 Sample purity A260/A230 Ratios The A260/A230 is a sensitive indicator of contaminants that absorb at 230 nm. These contaminants are significantly more numerous than those absorbing at 280 nm, and include chaotropic salts such as guanidine thiocyanate (GTC) and guanidine hydrochloride (GuHCl), EDTA, non-ionic detergents like Triton™ X-100 and Tween® 20, proteins, and phenol. Substances like polysaccharides or free floating solid particles like silica fibers absorb at this wavelength, but will have a weaker effect. Low 260/230 values indicates the presence of residual extraction reagent (ex. Carbohydrates, Chaotropic salts, phenol). all_data %&gt;% filter(!is.na(x260_230)) %&gt;% select(Extraction, x260_230, Taxon) %&gt;% group_by(Extraction) %&gt;% #group_by(Taxon, Extraction) %&gt;% summarise(value = sprintf(&quot;%.2f±%.2f&quot;, mean(x260_230), sd(x260_230))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of 260/230 values&quot;) .table td.tinytable_css_ide3dpzqr2vk5wkwqdwm9l, .table th.tinytable_css_ide3dpzqr2vk5wkwqdwm9l { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of 260/230 values REF DREX1 DREX2 0.09±0.11 0.17±0.13 0.20±0.27 all_data %&gt;% filter(!is.na(x260_230)) %&gt;% mutate(d260_230=abs(1.8-x260_230)) %&gt;% select(Extraction, d260_230, Taxon) %&gt;% group_by(Taxon, Extraction) %&gt;% summarise(value = sprintf(&quot;%.2f±%.2f&quot;, mean(d260_230), sd(d260_230))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of the deviation of 260/230 values from 1.8&quot;) .table td.tinytable_css_idxh6i3hb1cof6c3ayfs2p, .table th.tinytable_css_idxh6i3hb1cof6c3ayfs2p { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of the deviation of 260/230 values from 1.8 Taxon REF DREX1 DREX2 Amphibian 1.72±0.09 1.53±0.15 1.61±0.17 Reptile 1.76±0.04 1.66±0.13 1.63±0.17 Mammal 1.62±0.17 1.63±0.12 1.38±0.52 Bird 1.72±0.09 1.69±0.10 1.67±0.10 Control 1.79±0.00 1.72±0.09 1.79±0.00 Higher deviation from 1.8 indicates lower purity of the DNA extracts all_data %&gt;% filter(!is.na(x260_230)) %&gt;% select(Extraction, x260_230, Taxon, Species) %&gt;% ggplot(aes(x=Extraction, y=x260_230, color=Species, group=Extraction))+ geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Deviation of 260/230 values from 1.8&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% # filter(!is.na(x260_230),Taxon != &quot;Control&quot;) %&gt;% filter(!is.na(x260_230),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_230=abs(1.8-x260_230)) %&gt;% lmerTest::lmer(rank(d260_230) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot() all_data %&gt;% # filter(!is.na(x260_230),Taxon != &quot;Control&quot;) %&gt;% filter(!is.na(x260_230),Taxon != &quot;Control&quot;,!dna_extract %in% c(&quot;AGI41E1&quot;)) %&gt;% #filter(!is.na(x260_230),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_230=abs(1.8-x260_230)) %&gt;% lmerTest::lmer(rank(d260_230) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 633.23 211.08 3 7.947 0.9068 0.479655 Extraction 2535.12 1267.56 2 40.454 5.4455 0.008049 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 all_data %&gt;% # filter(!is.na(x260_230),Taxon != &quot;Control&quot;) %&gt;% filter(!is.na(x260_230),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_230=abs(1.8-x260_230)) %&gt;% lmerTest::lmer(rank(d260_230) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idnte5kstjheatu8g93b0e, .table th.tinytable_css_idnte5kstjheatu8g93b0e { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 32.4284615 6.339797 5.1150630 12.163079 0.0002446977 fixed NA TaxonReptile 6.8963418 8.091541 0.8522903 8.223421 0.4181819448 fixed NA TaxonMammal -5.7184280 8.091541 -0.7067168 8.223421 0.4992748629 fixed NA TaxonBird 8.7727143 8.273361 1.0603567 8.888935 0.3169426589 fixed NA ExtractionDREX1 -9.6666667 4.231586 -2.2844072 33.999693 0.0287121253 fixed NA ExtractionDREX2 -13.0000000 4.231586 -3.0721338 33.999693 0.0041659257 ran_pars Sample:Species sd__(Intercept) 0.8608917 NA NA NA NA ran_pars Species sd__(Intercept) 7.6823091 NA NA NA NA ran_pars Residual sd__Observation 12.6947594 NA NA NA NA all_data %&gt;% # filter(!is.na(x260_230),Taxon != &quot;Control&quot;) %&gt;% filter(!is.na(x260_230),Taxon != &quot;Control&quot;, !Sample %in% c(&quot;ABD27&quot;, &quot;AJP51&quot;, &quot;AFO83&quot;,&quot;AAZ65&quot;,&quot;AGI41&quot;, &quot;AIV55&quot;)) %&gt;% mutate(d260_230=abs(1.8-x260_230)) %&gt;% lmerTest::lmer(rank(d260_230) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;),show.data = TRUE) all_data %&gt;% filter(!is.na(x260_230),Taxon != &quot;Control&quot;) %&gt;% mutate(d260_230=abs(1.8-x260_230)) %&gt;% lmerTest::lmer(rank(d260_230) ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.178054 0.4098904 2.6 Amplification performance all_data %&gt;% filter(!is.na(ct_d_rn)) %&gt;% select(Extraction, ct_d_rn, Taxon) %&gt;% group_by(Taxon, Extraction) %&gt;% summarise(value = sprintf(&quot;%.2f±%.2f&quot;, mean(ct_d_rn), sd(ct_d_rn))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of Cts (cycle threshold) values&quot;) .table td.tinytable_css_ided05556zkjwepnnfgpza, .table th.tinytable_css_ided05556zkjwepnnfgpza { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of Cts (cycle threshold) values Taxon REF DREX1 DREX2 Amphibian 18.19±2.11 15.57±3.29 14.42±2.53 Reptile 16.16±3.91 14.56±3.36 16.33±3.37 Mammal 15.21±4.13 14.75±1.84 14.45±2.06 Bird 20.36±3.58 20.83±2.31 18.91±2.51 Control 23.86±2.69 23.39±0.76 26.23±4.24 all_data %&gt;% #filter(!Taxon==&quot;Control&quot;) %&gt;% select(Library,Species,Extraction, ct_d_rn,Taxon) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction, y=ct_d_rn, color=Species, group=Extraction))+ geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Cts (cycle threshold) values&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dna_extract, ct_d_rn, ng_ul_lib, Species, Extraction) %&gt;% ggplot(aes(x=log10(ng_ul_lib), y=ct_d_rn)) + geom_point(aes(color=Extraction)) + geom_smooth(method = &quot;lm&quot;, se=FALSE) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(ct_d_rn ~ Taxon + Extraction + log10(ng_ul_lib) + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot() all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(ct_d_rn ~ Taxon + Extraction + log10(ng_ul_lib) + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 22.392 7.464 3 8.709 1.2818 0.3402 Extraction 26.585 13.292 2 45.423 2.2826 0.1136 log10(ng_ul_lib) 146.211 146.211 1 39.839 25.1082 1.154e-05 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(ct_d_rn ~ Taxon + Extraction + log10(ng_ul_lib) + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_id5iekklxivrejg8z8c4f8, .table th.tinytable_css_id5iekklxivrejg8z8c4f8 { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 17.5438706 0.8220013 21.3428733 13.276020 1.154989e-11 fixed NA TaxonReptile -1.0851748 1.0070686 -1.0775579 7.629471 3.141183e-01 fixed NA TaxonMammal -1.2919091 0.9970232 -1.2957662 7.438002 2.338163e-01 fixed NA TaxonBird 0.5700030 1.2068017 0.4723253 11.583255 6.454686e-01 fixed NA ExtractionDREX1 -1.4247190 0.7005353 -2.0337576 44.938946 4.790546e-02 fixed NA ExtractionDREX2 -1.0904678 0.7003063 -1.5571298 44.905296 1.264602e-01 fixed NA log10(ng_ul_lib) -3.2269503 0.6439979 -5.0108085 39.838561 1.154229e-05 ran_pars Sample:Species sd__(Intercept) 0.7960002 NA NA NA NA ran_pars Species sd__(Intercept) 0.4512907 NA NA NA NA ran_pars Residual sd__Observation 2.4131358 NA NA NA NA all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(ct_d_rn ~ Taxon + Extraction + log10(ng_ul_lib) + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;),show.data = TRUE) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% mutate(&quot;log_extract&quot;=log(extract))%&gt;% lmerTest::lmer(ct_d_rn ~ Taxon + Extraction + log10(ng_ul_lib) + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% ggeffects::ggpredict(.,terms=&quot;Extraction&quot;) # Predicted values of ct_d_rn Extraction | Predicted | 95% CI ------------------------------------- REF | 16.75 | 15.13, 18.37 DREX1 | 15.32 | 13.69, 16.96 DREX2 | 15.66 | 14.03, 17.28 Adjusted for: * Taxon = Amphibian * ng_ul_lib = 1.76 * Sample = 0 (population-level) * Species = 0 (population-level) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(ct_d_rn ~ Taxon + Extraction + log10(ng_ul_lib) + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.5145871 0.5756074 "],["sequencing-data.html", "3 Sequencing data 3.1 Sequencing depth 3.2 Quality-filtering", " 3 Sequencing data 3.1 Sequencing depth tibble(metric=c(&quot;Total GB&quot;, &quot;Total reads&quot;, &quot;Average GB&quot;, &quot;Average reads&quot;), value=unlist(c(round(all_data %&gt;% summarise(sum(bases_pre_fastp)) / 1000000000,2), round(all_data %&gt;% summarise(sum(bases_pre_fastp)) / 300,2), paste0(round(all_data %&gt;% summarise(mean(bases_pre_fastp)) / 1000000000,2),&quot;±&quot;,round(all_data %&gt;% summarise(sd(bases_pre_fastp)) / 1000000000,2)), paste0(round(all_data %&gt;% summarise(mean(bases_pre_fastp)) / 300,0),&quot;±&quot;,round(all_data %&gt;% summarise(sd(bases_pre_fastp)) / 300,0)))) ) %&gt;% tt() .table td.tinytable_css_id61f1jtglc2t24mbh8jzt, .table th.tinytable_css_id61f1jtglc2t24mbh8jzt { border-bottom: solid 0.1em #d3d8dc; } metric value Total GB 429.1 Total reads 1430317433 Average GB 5.36±2.7 Average reads 17878968±9011624 all_data %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(bases_post_fastp / 1000000000), sd(bases_post_fastp / 1000000000))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of sequencing depth (GB)&quot;) .table td.tinytable_css_id3zop1qmbxpjpla288mdt, .table th.tinytable_css_id3zop1qmbxpjpla288mdt { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of sequencing depth (GB) Taxon REF DREX1 DREX2 Amphibian 4.0±1.5 4.2±2.3 4.7±0.4 Reptile 6.1±2.3 5.7±1.4 5.0±1.9 Mammal 5.5±3.3 4.6±2.2 3.8±2.5 Bird 3.7±1.9 3.4±2.5 2.7±1.9 Control 0.0±0.0 0.5±0.6 2.1±2.7 all_data %&gt;% select(Library,Species,Extraction,bases_pre_fastp,Taxon) %&gt;% mutate(bases_pre_fastp=bases_pre_fastp/1000000000) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=bases_pre_fastp, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Sequencing depth (Gb)&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(bases_post_fastp ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot() all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(bases_post_fastp ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 2.0153e+19 6.7177e+18 3 8 2.2598 0.1587 Extraction 7.4191e+18 3.7095e+18 2 Inf 1.2479 0.2871 all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(bases_post_fastp ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_id54fnah6bbt6e28rv746x, .table th.tinytable_css_id54fnah6bbt6e28rv746x { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 4671932550 698716103 6.6864532 1.158464e+01 2.665888e-05 fixed NA TaxonReptile 1321944147 900698455 1.4676878 7.997188e+00 1.803849e-01 fixed NA TaxonMammal 363028694 900698455 0.4030524 7.997188e+00 6.974701e-01 fixed NA TaxonBird -994816271 900698455 -1.1044943 7.997188e+00 3.014989e-01 fixed NA ExtractionDREX1 -386734817 497720822 -0.7770115 6.659800e+18 4.371520e-01 fixed NA ExtractionDREX2 -786257695 497720822 -1.5797163 3.916756e+18 1.141719e-01 ran_pars Sample:Species sd__(Intercept) 1178495447 NA NA NA NA ran_pars Species sd__(Intercept) 164343450 NA NA NA NA ran_pars Residual sd__Observation 1724155502 NA NA NA NA all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(bases_post_fastp ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;)) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(bases_post_fastp ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;Species&quot;),pred.type = &quot;re&quot;,ci.lvl = NA)+ theme(axis.text.x = element_text(angle = 45, hjust = 1)) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(bases_post_fastp ~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.1544544 0.427248 3.2 Quality-filtering all_data %&gt;% mutate(qf_bases=bases_post_fastp/bases_pre_fastp*100) %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(qf_bases), sd(qf_bases))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of quality-filtered proportion of reads&quot;) .table td.tinytable_css_idfxgrzojnsg0bnc75kjk5, .table th.tinytable_css_idfxgrzojnsg0bnc75kjk5 { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of quality-filtered proportion of reads Taxon REF DREX1 DREX2 Amphibian 84.6±1.5 91.1±4.8 87.5±4.0 Reptile 89.9±6.6 90.5±7.4 88.3±7.6 Mammal 92.2±2.4 89.0±5.1 91.3±1.8 Bird 70.6±16.5 62.5±29.3 66.7±19.3 Control 3.3±2.3 9.8±11.5 27.5±3.4 all_data %&gt;% mutate(qf_bases=bases_post_fastp/bases_pre_fastp*100) %&gt;% select(Library,Species,Extraction,qf_bases,Taxon) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=qf_bases, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;High-quality data (%)&quot;,x=&quot;Extraction method&quot;) data&lt;-all_data %&gt;% mutate(qf_bases=bases_post_fastp/bases_pre_fastp,unique_sample=factor(1:nrow(all_data))) %&gt;% filter(Taxon != &quot;Control&quot;) M &lt;-MASS::glmmPQL(qf_bases~ Taxon+Extraction,random=~1|Species/Sample, family=&quot;quasibinomial&quot;,data=data) Anova_table&lt;-car::Anova(M,test.statistic=&quot;Wald&quot;,type=&quot;III&quot;)%&gt;% mutate(F=Chisq/Df) # Approximate F value n &lt;- nrow(M$data) # Total number of observations df_fixed &lt;- length(fixef(M)) # Number of fixed effect parameters df_random &lt;- length(ranef(M)) # Number of random effect parameters (or levels) approx_residual_df &lt;- n - df_fixed - df_random # Approx. residual Df data.frame(Anova_table, p_value=pf(Anova_table$F, Anova_table$Df, approx_residual_df, lower.tail = FALSE))%&gt;% select(F,p_value) F p_value (Intercept) 74.7499062 2.356732e-12 Taxon 14.3961730 2.851930e-07 Extraction 0.1329218 8.757746e-01 broom.mixed::tidy(M) %&gt;% tt() .table td.tinytable_css_idbmex0ala8mvgxcewng5e, .table th.tinytable_css_idbmex0ala8mvgxcewng5e { border-bottom: solid 0.1em #d3d8dc; } effect term estimate std.error df statistic p.value fixed (Intercept) 2.02494956 0.2446263 46 8.2777260 1.155959e-10 fixed TaxonReptile 0.18760837 0.3161277 8 0.5934575 5.692695e-01 fixed TaxonMammal 0.32238134 0.3215166 8 1.0026896 3.453708e-01 fixed TaxonBird -1.25655677 0.2879146 8 -4.3643388 2.398635e-03 fixed ExtractionDREX1 -0.08597233 0.1846303 46 -0.4656458 6.436663e-01 fixed ExtractionDREX2 -0.07012683 0.1850391 46 -0.3789838 7.064436e-01 plot_model(M,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;)) "],["genomic-data.html", "4 Genomic data 4.1 Read duplicates 4.2 Depth of coverage 4.3 Breadth of coverage 4.4 Breadth vs. coverage", " 4 Genomic data 4.1 Read duplicates all_data %&gt;% select(dataset,Extraction,duplicates,Taxon) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(duplicates), sd(duplicates))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of fraction of duplicated reads&quot;) .table td.tinytable_css_idfj9sd2p6mr2gpyh0x6q6, .table th.tinytable_css_idfj9sd2p6mr2gpyh0x6q6 { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of fraction of duplicated reads Taxon REF DREX1 DREX2 Amphibian 0.3±0.2 0.2±0.2 0.2±0.2 Reptile 0.5±0.4 0.3±0.3 0.4±0.4 Mammal 0.4±0.4 0.2±0.1 0.2±0.2 Bird 0.8±0.3 0.9±0.1 0.6±0.4 Control 1.0±0.0 0.9±0.0 1.0±0.0 all_data %&gt;% select(dataset,Extraction,duplicates,Taxon, Species) %&gt;% mutate(duplicates=duplicates*100) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=duplicates, color=Species, group=Extraction)) + scale_y_reverse() + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Duplication rate (%)&quot;,x=&quot;Extraction method&quot;) data&lt;-all_data %&gt;% select(dataset,Sample,Species,Extraction,duplicates,Taxon,catalogue) %&gt;% filter(Taxon != &quot;Control&quot;) M&lt;-MASS::glmmPQL(duplicates~ Taxon+Extraction,random=~1|Species/Sample, family=&quot;quasibinomial&quot;,data=data) Anova_table&lt;-car::Anova(M,test.statistic=&quot;Wald&quot;,type=&quot;III&quot;)%&gt;% mutate(F=Chisq/Df) # Approximate F value n &lt;- nrow(M$data) # Total number of observations df_fixed &lt;- length(fixef(M)) # Number of fixed effect parameters df_random &lt;- length(ranef(M)) # Number of random effect parameters (or levels) approx_residual_df &lt;- n - df_fixed - df_random # Approx. residual Df data.frame(Anova_table, p_value=pf(Anova_table$F, Anova_table$Df, approx_residual_df, lower.tail = FALSE))%&gt;% select(F,p_value) F p_value (Intercept) 3.382735 0.0705220597 Taxon 6.286319 0.0008325178 Extraction 2.590875 0.0827998947 broom.mixed::tidy(M) %&gt;% tt() .table td.tinytable_css_idew07joept7lqdz9rqcpi, .table th.tinytable_css_idew07joept7lqdz9rqcpi { border-bottom: solid 0.1em #d3d8dc; } effect term estimate std.error df statistic p.value fixed (Intercept) -0.8529577 0.4843817 46 -1.7609205 0.084898541 fixed TaxonReptile 0.7968453 0.6107813 8 1.3046327 0.228295375 fixed TaxonMammal 0.2149855 0.6241809 8 0.3444282 0.739403356 fixed TaxonBird 2.3421470 0.6276001 8 3.7319100 0.005771913 fixed ExtractionDREX1 -0.4364219 0.3522111 46 -1.2390918 0.221596712 fixed ExtractionDREX2 -0.7829704 0.3612021 46 -2.1676796 0.035394104 plot_model(M,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;)) 4.2 Depth of coverage all_data %&gt;% select(dataset,Extraction,coverage_depth,Taxon) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(coverage_depth), sd(coverage_depth))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of fraction of duplicated reads&quot;) .table td.tinytable_css_id31yxe2l4gjypr8ms9hau, .table th.tinytable_css_id31yxe2l4gjypr8ms9hau { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of fraction of duplicated reads Taxon REF DREX1 DREX2 Amphibian 0.0±0.0 0.0±0.0 0.0±0.0 Reptile 0.2±0.3 0.1±0.1 0.1±0.1 Mammal 0.7±1.2 0.3±0.4 0.5±1.0 Bird 0.4±0.8 0.6±0.5 0.8±0.8 Control 0.0±0.0 0.0±0.0 0.0±0.0 all_data %&gt;% select(dataset,Extraction,coverage_depth,Taxon, Species) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=coverage_depth, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Depth of coverage&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dataset,Sample,Species,Extraction,coverage_depth,Taxon,catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(rank(coverage_depth)~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot() all_data %&gt;% select(dataset,Sample,Species,Extraction,coverage_depth,Taxon,catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(rank(coverage_depth)~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 1802.51 600.84 3 8 6.8155 0.01355 * Extraction 2.77 1.39 2 46 0.0157 0.98441 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 all_data %&gt;% select(dataset,Sample,Species,Extraction,coverage_depth,Taxon,catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(rank(coverage_depth)~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% plot_model(.,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;)) all_data %&gt;% select(dataset,Sample,Species,Extraction,coverage_depth,Taxon,catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(rank(coverage_depth)~ Taxon + Extraction + (1 | Species/Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.5280316 0.8163076 4.3 Breadth of coverage all_data %&gt;% select(dataset,Extraction,coverage_breadth,Taxon) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(coverage_breadth), sd(coverage_breadth))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of depth of host genome coverage&quot;) .table td.tinytable_css_id4rrv9nr1i0glgkkmb6h0, .table th.tinytable_css_id4rrv9nr1i0glgkkmb6h0 { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of depth of host genome coverage Taxon REF DREX1 DREX2 Amphibian 0.0±0.0 0.0±0.0 0.0±0.0 Reptile 4.9±7.5 3.0±5.4 2.9±3.7 Mammal 5.7±5.9 10.2±16.4 15.1±26.4 Bird 0.6±0.5 3.2±4.4 8.9±13.9 Control 0.0±0.0 0.0±0.0 0.0±0.0 all_data %&gt;% select(dataset,Extraction,coverage_breadth,Taxon,Species) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=coverage_breadth, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Breadth of coverage (%)&quot;,x=&quot;Extraction method&quot;) data&lt;-all_data %&gt;% select(dataset,Extraction,Sample,Species,coverage_breadth,Taxon,catalogue) %&gt;% ## Since amphibians contain only 0s, the small constant value avoid extremely large confidence intervals for that group mutate(coverage_breadth=(coverage_breadth/100)+0.001)%&gt;% filter(Taxon != &quot;Control&quot;) # %&gt;%filter(catalogue != &quot;All&quot;) M&lt;-MASS::glmmPQL(coverage_breadth~ Taxon+Extraction,random=~1|Species/Sample, family=&quot;quasibinomial&quot;,data=data) Anova_table&lt;-car::Anova(M,test.statistic=&quot;Wald&quot;,type=&quot;III&quot;)%&gt;% mutate(F=Chisq/Df) # Approximate F value n &lt;- nrow(M$data) # Total number of observations df_fixed &lt;- length(fixef(M)) # Number of fixed effect parameters df_random &lt;- length(ranef(M)) # Number of random effect parameters (or levels) approx_residual_df &lt;- n - df_fixed - df_random # Approx. residual Df data.frame(Anova_table, p_value=pf(Anova_table$F, Anova_table$Df, approx_residual_df, lower.tail = FALSE))%&gt;% select(F,p_value) F p_value (Intercept) 32.284463 3.517106e-07 Taxon 2.732762 5.093456e-02 Extraction 9.995537 1.668395e-04 broom.mixed::tidy(M) %&gt;% tt() .table td.tinytable_css_idn53zj49ze49igyshb8dn, .table th.tinytable_css_idn53zj49ze49igyshb8dn { border-bottom: solid 0.1em #d3d8dc; } effect term estimate std.error df statistic p.value fixed (Intercept) -7.484102 1.3757426 46 -5.440045 1.981253e-06 fixed TaxonReptile 2.835852 1.5439563 8 1.836744 1.035612e-01 fixed TaxonMammal 4.032235 1.5174983 8 2.657160 2.893266e-02 fixed TaxonBird 3.502390 1.5192729 8 2.305306 5.005449e-02 fixed ExtractionDREX1 0.447717 0.2802892 46 1.597340 1.170377e-01 fixed ExtractionDREX2 1.074598 0.2620250 46 4.101129 1.658076e-04 plot_model(M,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;)) 4.4 Breadth vs. coverage all_data_log &lt;- all_data %&gt;% mutate(coverage_breadth_log=log(coverage_breadth)) %&gt;% mutate(coverage_depth_log=log(coverage_depth)) lm_eq &lt;- lm(coverage_breadth_log ~ coverage_depth_log, data = all_data_log %&gt;% filter(coverage_depth_log != -Inf ,coverage_breadth_log != -Inf)) coef &lt;- coef(lm_eq) all_data_log$coverage_breadth_log_pred &lt;- coef[1] + coef[2] * all_data_log$coverage_depth_log all_data_log %&gt;% select(dataset,Extraction,coverage_depth_log,coverage_breadth_log,coverage_breadth_log_pred,Taxon,Species,Sample) %&gt;% unique() %&gt;% ggplot(aes(x=coverage_depth_log,y=coverage_breadth_log)) + geom_point(aes(color=Species, shape=Extraction),size=3, alpha=0.9) + geom_segment(aes(x = coverage_depth_log, y = coverage_breadth_log, xend = coverage_depth_log, yend = coverage_breadth_log_pred, color=Species), alpha=0.9)+ geom_smooth(method = lm, se = FALSE, color=&quot;#666666&quot;) + scale_color_manual(values=vertebrate_colors) + theme_minimal() + labs(y=&quot;Breadth of coverage (%)&quot;,x=&quot;Depth of coverage&quot;) "],["metagenomic-data.html", "5 Metagenomic data 5.1 Library complexity 5.2 Combined community analysis 5.3 Microbial complexity recovery", " 5 Metagenomic data 5.1 Library complexity Nonpareil estimate of the metagenomic complexity after removing host DNA. all_data %&gt;% select(dataset,Extraction,nonpareil,Taxon) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(nonpareil), sd(nonpareil))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of breadth of host genome coverage&quot;) .table td.tinytable_css_idx6hs8n8qx5eugzocloex, .table th.tinytable_css_idx6hs8n8qx5eugzocloex { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of breadth of host genome coverage Taxon REF DREX1 DREX2 Amphibian 0.9±0.1 0.8±0.1 0.8±0.1 Reptile 0.9±0.1 0.9±0.0 0.9±0.1 Mammal 0.8±0.2 0.8±0.1 0.7±0.3 Bird 0.9±0.1 1.0±0.0 0.8±0.4 Control 0.0±0.0 0.5±0.6 0.5±0.7 all_data %&gt;% select(dataset,Extraction,nonpareil,Taxon,Species) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=nonpareil, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Nonpareil completeness&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dataset,Extraction,Sample,Species,nonpareil,Taxon,catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% #filter(catalogue != &quot;All&quot;) %&gt;% MASS::glmmPQL(nonpareil~ Taxon+Extraction,random=~1|Species/Sample, family=&quot;quasibinomial&quot;,data=.) %&gt;% car::Anova(.,test.statistic=&quot;Wald&quot;) Analysis of Deviance Table (Type II tests) Response: zz Chisq Df Pr(&gt;Chisq) Taxon 9.1822 3 0.0269646 * Extraction 14.2287 2 0.0008133 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 data&lt;-all_data %&gt;% select(dataset,Extraction,Sample,Species,nonpareil,Taxon,catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) #%&gt;% filter(catalogue != &quot;All&quot;) M&lt;-MASS::glmmPQL(nonpareil~ Taxon+Extraction,random=~1|Species/Sample, family=&quot;quasibinomial&quot;,data=data) Anova_table&lt;-car::Anova(M,test.statistic=&quot;Wald&quot;,type=&quot;III&quot;)%&gt;% mutate(F=Chisq/Df) # Approximate F value n &lt;- nrow(M$data) # Total number of observations df_fixed &lt;- length(fixef(M)) # Number of fixed effect parameters df_random &lt;- length(ranef(M)) # Number of random effect parameters (or levels) approx_residual_df &lt;- n - df_fixed - df_random # Approx. residual Df data.frame(Anova_table, p_value=pf(Anova_table$F, Anova_table$Df, approx_residual_df, lower.tail = FALSE))%&gt;% select(F,p_value) F p_value (Intercept) 34.129537 1.883942e-07 Taxon 3.060717 3.438361e-02 Extraction 7.114372 1.621943e-03 broom.mixed::tidy(M) %&gt;% tt() .table td.tinytable_css_idys7wby6ho6g9y9mdccxc, .table th.tinytable_css_idys7wby6ho6g9y9mdccxc { border-bottom: solid 0.1em #d3d8dc; } effect term estimate std.error df statistic p.value fixed (Intercept) 2.0341583 0.3636753 46 5.5933361 1.173059e-06 fixed TaxonReptile 0.5969719 0.4633445 8 1.2883977 2.336181e-01 fixed TaxonMammal -0.5520372 0.4122472 8 -1.3390926 2.173392e-01 fixed TaxonBird 0.4335768 0.4524258 8 0.9583381 3.659548e-01 fixed ExtractionDREX1 0.0578808 0.3338911 46 0.1733523 8.631351e-01 fixed ExtractionDREX2 -0.8572831 0.2948977 46 -2.9070523 5.597154e-03 plot_model(M,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;)) VarCorr(M) Variance StdDev Species = pdLogChol(1) (Intercept) 2.270973e-09 4.765473e-05 Sample = pdLogChol(1) (Intercept) 1.978035e-01 4.447510e-01 Residual 1.172704e-01 3.424477e-01 # Within-taxon between-species variance: 0% 4*(2.092129e-09/(2.092129e-09+1.658436e-01)) [1] 5.046029e-08 # Within-species between-sample variance: 4% 4*(1.658436e-01/(2.092129e-09+1.658436e-01)) [1] 4 EHEX obtained lower nonpareil completeness values than REF and DREX. Lowest nonpareil completeness values were ontained for mammals and higest for reptiles. 5.2 Combined community analysis species=&quot;combined&quot; genus=species sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0134/DMB0134_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0134/DMB0134_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0134/DMB0134_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0134/DMB0134.tree.gz&quot;, &quot;data/DMB0134.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0134.tree.gz&quot;) 5.2.1 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 5.2.2 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities #alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset, Extraction, Sample), by = join_by(dataset == dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness = mean(richness), neutral = mean(neutral), phylogenetic = mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_idlw5kd1w1rvh8zc5pfg3k, .table th.tinytable_css_idlw5kd1w1rvh8zc5pfg3k { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX1 53.69565 24.45051 4.093443 DREX2 53.45455 25.65059 4.011921 ZYMO 78.76190 35.06459 4.747699 alpha_data &lt;- alpha_diversity %&gt;% left_join(all_data,by= join_by(dataset==dataset)) alpha_data %&gt;% dplyr::select(dataset,Library,Species,Taxon,Sample,Extraction, richness,neutral,phylogenetic) %&gt;% pivot_longer(!c(dataset,Library,Species,Taxon,Sample,Extraction), names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% mutate(Taxon=factor(Taxon,levels=c(&quot;Amphibian&quot;,&quot;Reptile&quot;,&quot;Mammal&quot;))) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=value, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(metric ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Diversity&quot;,x=&quot;Extraction method&quot;) 5.2.3 Richness alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, richness, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(log(richness) ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% plot() alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, richness, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(log(richness) ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 11.1732 3.7244 3 8.416 5.8091 0.01921 * Extraction 0.7084 0.3542 2 39.374 0.5525 0.57992 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, richness, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(log(richness) ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.3901002 0.7584841 ## 2% of the variance explained by fixed effects ## 91% of the variance explained by random effects alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, richness, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(log(richness) ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% VarCorr() %&gt;% print(comp = &quot;Variance&quot;) Groups Name Variance Sample:Species (Intercept) 0.52240 Species (Intercept) 0.45551 Residual 0.64113 # Within-taxon between-species variance: 59% 91 * (0.85583 / (0.85583 + 0.47587)) [1] 58.48204 # Within-species between-sample variance: 33% 91 * (0.47587 / (0.47587 + 0.85583)) [1] 32.51796 REF got slightly lower richness values than DREX and EHEX. Large variability between species within taxa. 5.2.4 Neutral alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, neutral, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(neutral ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% plot() alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, neutral, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(neutral ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 909.42 303.14 3 8.324 2.3875 0.1418 Extraction 790.15 395.08 2 39.139 3.1116 0.0557 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, neutral, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(neutral ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.2662611 0.7706441 ## 2% of the variance explained by fixed effects ## 91% of the variance explained by random effects alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, neutral, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(neutral ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% VarCorr() %&gt;% print(comp = &quot;Variance&quot;) Groups Name Variance Sample:Species (Intercept) 120.83 Species (Intercept) 158.39 Residual 126.97 # Within-taxon between-species variance: 69% 89 * (286.830 / (286.830 + 81.267)) [1] 69.35093 # Within-species between-sample variance: 20% 89 * (81.267 / (286.830 + 81.267)) [1] 19.64907 No significant differences in neutral diversity between extraction methods and taxonomic groups. Neutral diversity very species specific. 5.2.5 Phylogenetic alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, phylogenetic, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(phylogenetic ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% plot() alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, phylogenetic, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(phylogenetic ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% anova() Type III Analysis of Variance Table with Satterthwaite&#39;s method Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) Taxon 11.1581 3.7194 3 8.421 3.6047 0.06232 . Extraction 1.7646 0.8823 2 39.188 0.8551 0.43302 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, phylogenetic, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(phylogenetic ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% r.squaredGLMM() R2m R2c [1,] 0.2661818 0.7436036 ## 6% of the variance explained by fixed effects ## 90% of the variance explained by random effects alpha_data %&gt;% dplyr::select(dataset, Extraction, Sample, Species, phylogenetic, Taxon, catalogue) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(phylogenetic ~ Taxon + Extraction + (1 | Species / Sample), data = ., REML = TRUE) %&gt;% VarCorr() %&gt;% print(comp = &quot;Variance&quot;) Groups Name Variance Sample:Species (Intercept) 1.74086 Species (Intercept) 0.18041 Residual 1.03180 # Within-taxon between-species variance: 43% 90 * (1.37930 / (1.37930 + 1.51968)) [1] 42.82092 # Within-species between-sample variance: 47% 90 * (1.51968 / (1.37930 + 1.51968)) [1] 47.17908 No significant differences in phylogenetic diversity between extraction methods and taxonomic groups. 5.3 Microbial complexity recovery all_data %&gt;% select(dataset,Extraction,microbial_fraction,MAG_mapping_percentage,Taxon,catalogue) %&gt;% mutate(damr=pmin(1,MAG_mapping_percentage/(microbial_fraction))) %&gt;% mutate(damr=ifelse(is.na(damr),0,damr)) %&gt;% unique() %&gt;% # what do we filter for? group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.3f±%.3f&quot;, mean(damr), sd(damr))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of breadth of host genome coverage&quot;) .table td.tinytable_css_id10ewckoy538x9fecpbjb, .table th.tinytable_css_id10ewckoy538x9fecpbjb { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of breadth of host genome coverage Taxon REF DREX1 DREX2 Amphibian 0.755±0.346 0.735±0.337 0.755±0.335 Reptile 0.947±0.070 0.970±0.054 0.977±0.044 Mammal 0.768±0.144 0.889±0.165 0.831±0.154 Bird 0.856±0.197 0.793±0.261 0.724±0.319 Control 1.000±0.000 1.000±0.000 1.000±0.000 all_data %&gt;% select(dataset,Extraction,microbial_fraction,MAG_mapping_percentage,Taxon,Sample,Species) %&gt;% mutate(damr=pmin(1,MAG_mapping_percentage/(microbial_fraction))) %&gt;% mutate(damr=ifelse(is.na(damr),0,damr)) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=damr, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Domain-adjusted mapping rate&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dataset,Extraction,microbial_fraction,MAG_mapping_percentage,Taxon, Sample, Species,catalogue) %&gt;% mutate(damr=pmin(1,MAG_mapping_percentage/(microbial_fraction))) %&gt;% mutate(damr=ifelse(is.na(damr),0,damr)) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% MASS::glmmPQL(damr~ Taxon+Extraction,random=~1|Species/Sample, family=&quot;quasibinomial&quot;,data=.) %&gt;% car::Anova(.,test.statistic=&quot;Wald&quot;) Analysis of Deviance Table (Type II tests) Response: zz Chisq Df Pr(&gt;Chisq) Taxon 7.0478 3 0.07039 . Extraction 0.7968 2 0.67138 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 data&lt;-all_data %&gt;% select(dataset,Extraction,microbial_fraction,MAG_mapping_percentage,Taxon, Sample, Species,catalogue) %&gt;% mutate(damr=pmin(1,MAG_mapping_percentage/(microbial_fraction))) %&gt;% mutate(damr=ifelse(is.na(damr),0,damr)) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) M&lt;-MASS::glmmPQL(damr~ Taxon+Extraction,random=~1|Species/Sample, family=&quot;quasibinomial&quot;,data=data) Anova_table&lt;-car::Anova(M,test.statistic=&quot;Wald&quot;,type=&quot;III&quot;)%&gt;% mutate(F=Chisq/Df) # Approximate F value n &lt;- nrow(M$data) # Total number of observations df_fixed &lt;- length(fixef(M)) # Number of fixed effect parameters df_random &lt;- length(ranef(M)) # Number of random effect parameters (or levels) approx_residual_df &lt;- n - df_fixed - df_random # Approx. residual Df data.frame(Anova_table, p_value=pf(Anova_table$F, Anova_table$Df, approx_residual_df, lower.tail = FALSE))%&gt;% select(F,p_value) F p_value (Intercept) 5.0023896 0.02880432 Taxon 2.3492555 0.08075295 Extraction 0.3984138 0.67303769 broom.mixed::tidy(M) %&gt;% tt() .table td.tinytable_css_idih7n3xmpudanl0q938pm, .table th.tinytable_css_idih7n3xmpudanl0q938pm { border-bottom: solid 0.1em #d3d8dc; } effect term estimate std.error df statistic p.value fixed (Intercept) 1.33363650 0.6227920 46 2.1413836 0.03757338 fixed TaxonReptile 2.30012902 0.9535923 8 2.4120676 0.04237128 fixed TaxonMammal 0.40556099 0.8473819 8 0.4786048 0.64502663 fixed TaxonBird 0.40804767 0.8579913 8 0.4755849 0.64708519 fixed ExtractionDREX1 0.15284789 0.2883826 46 0.5300177 0.59864887 fixed ExtractionDREX2 -0.08950725 0.2795925 46 -0.3201346 0.75031595 plot_model(M,type=&quot;pred&quot;,terms=c(&quot;Taxon&quot;,&quot;Extraction&quot;)) ## 27% of the variance explained by fixed effects ## 27% of the variance explained by random effects VarCorr(M) Variance StdDev Species = pdLogChol(1) (Intercept) 1.073914e-07 0.0003277063 Sample = pdLogChol(1) (Intercept) 1.679619e+00 1.2960011568 Residual 9.176235e-02 0.3029230022 # Within-taxon between-species variance: 0% 27*(2.545883e-08/(2.545883e-08+1.911908e+00)) [1] 3.595301e-07 # Within-species between-sample variance: 27% 27*(1.911908e+00/(2.545883e-08+1.911908e+00)) [1] 27 All three extraction methods yield similar DAMRs. 5.3.1 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% mutate(Taxon=factor(Taxon,levels=c(&quot;Amphibian&quot;, &quot;Reptile&quot;, &quot;Mammal&quot;, &quot;Bird&quot;, &quot;Control&quot;))) %&gt;% mutate(Species=factor(Species,levels=c(&quot;Calotriton asper&quot;, &quot;Lissotriton helveticus&quot;, &quot;Salamandra atra&quot;, &quot;Chalcides striatus&quot;, &quot;Natrix astreptophora&quot;, &quot;Podarcis muralis&quot;, &quot;Plecotus auritus&quot;, &quot;Sciurus carolinensis&quot;, &quot;Trichosurus vulpecula&quot;, &quot;Geospizopsis unicolor&quot;, &quot;Perisoreus infaustus&quot;, &quot;Zonotrichia capensis&quot;, &quot;Extraction control&quot;, &quot;Library control&quot;))) %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Taxon + Species + Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.title=element_blank(), panel.spacing = unit(0, &quot;lines&quot;)) #ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) genome_counts_filt_variance &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(sample_metadata %&gt;% filter(!Taxon %in% c(&quot;Birds&quot;, &quot;Control&quot;)) %&gt;% # exclude birds pull(dataset))) %&gt;% select(where(~!all(. == 0))) # Perform betadisper analysis richness_betadisper_result &lt;- genome_counts_filt_variance %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% betadisper(., sample_metadata %&gt;% filter(dataset %in% colnames(genome_counts_filt_variance)) %&gt;% arrange(match(dataset,colnames(genome_counts_filt_variance))) %&gt;% pull(Extraction)) # Check if there are significant differences in dispersion permutest(richness_betadisper_result,pairwise = TRUE) # Tests homogeneity of dispersion and pairwise comparisons between groups using permutations. Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.009035 0.0045175 1.1444 999 0.343 Residuals 60 0.236859 0.0039477 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) DREX1 DREX2 ZYMO DREX1 0.56800 0.198 DREX2 0.55115 0.362 ZYMO 0.20658 0.35323 TukeyHSD(richness_betadisper_result) # test significance between each group Tukey multiple comparisons of means 95% family-wise confidence level Fit: aov(formula = distances ~ group, data = df) $group diff lwr upr p adj DREX2-DREX1 -0.007193598 -0.05379165 0.03940445 0.9270330 ZYMO-DREX1 -0.028224995 -0.07482304 0.01837305 0.3194398 ZYMO-DREX2 -0.021031398 -0.06762945 0.02556665 0.5272157 richness &lt;- genome_counts_filt_variance %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% # nrow(richness) adonis2(formula = . ~ Extraction+Taxon+Species+Sample, data = sample_metadata %&gt;% filter(dataset %in% colnames(genome_counts_filt_variance)) %&gt;% arrange(match(dataset,colnames(genome_counts_filt_variance))), permutations = 999, by=&quot;terms&quot;) %&gt;% broom::tidy() richness # A tibble: 6 × 6 term df SumOfSqs R2 statistic p.value &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Extraction 2 0.575 0.0208 3.62 0.001 2 Taxon 3 6.62 0.239 27.7 0.001 3 Species 8 13.2 0.475 20.7 0.001 4 Sample 11 4.31 0.156 4.93 0.001 5 Residual 38 3.02 0.109 NA NA 6 Total 62 27.7 1 NA NA # Perform betadisper analysis neutral_betadisper_result &lt;- genome_counts_filt_variance %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% betadisper(., sample_metadata %&gt;% filter(dataset %in% colnames(genome_counts_filt_variance)) %&gt;% arrange(match(dataset,colnames(genome_counts_filt_variance))) %&gt;% pull(Extraction)) # Check if there are significant differences in dispersion permutest(neutral_betadisper_result,pairwise=TRUE) # Tests homogeneity of dispersion and pairwise comparisons between groups using permutations. Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.009171 0.0045854 1.3738 999 0.252 Residuals 60 0.200261 0.0033377 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) DREX1 DREX2 ZYMO DREX1 0.42800 0.153 DREX2 0.42982 0.320 ZYMO 0.16936 0.32804 neutral &lt;- genome_counts_filt_variance %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Extraction+Taxon+Species+Sample, data = sample_metadata %&gt;% filter(dataset %in% colnames(genome_counts_filt_variance)) %&gt;% arrange(match(dataset,colnames(genome_counts_filt_variance))), permutations = 999, by=&quot;terms&quot;) %&gt;% broom::tidy() neutral # A tibble: 6 × 6 term df SumOfSqs R2 statistic p.value &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Extraction 2 0.447 0.0160 5.29 0.001 2 Taxon 3 6.83 0.244 53.9 0.001 3 Species 8 13.4 0.479 39.7 0.001 4 Sample 11 5.68 0.203 12.2 0.001 5 Residual 38 1.61 0.0574 NA NA 6 Total 62 28.0 1 NA NA # Perform betadisper analysis phylogenetic_betadisper_result &lt;- genome_counts_filt_variance %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% betadisper(., sample_metadata %&gt;% filter(dataset %in% colnames(genome_counts_filt_variance)) %&gt;% arrange(match(dataset,colnames(genome_counts_filt_variance))) %&gt;% pull(Extraction)) # Check if there are significant differences in dispersion permutest(phylogenetic_betadisper_result,pairwise = TRUE) # Tests homogeneity of dispersion and pairwise comparisons between groups using permutations. Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.009171 0.0045854 1.3738 999 0.243 Residuals 60 0.200261 0.0033377 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) DREX1 DREX2 ZYMO DREX1 0.42300 0.149 DREX2 0.42982 0.318 ZYMO 0.16936 0.32804 phylogenetic &lt;- genome_counts_filt_variance %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Extraction+Taxon+Species+Sample, data = sample_metadata %&gt;% filter(dataset %in% colnames(genome_counts_filt_variance)) %&gt;% arrange(match(dataset,colnames(genome_counts_filt_variance))), permutations = 999, by=&quot;terms&quot;) %&gt;% broom::tidy() phylogenetic # A tibble: 6 × 6 term df SumOfSqs R2 statistic p.value &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Extraction 2 0.259 0.0259 4.96 0.001 2 Taxon 3 3.63 0.364 46.4 0.001 3 Species 8 3.67 0.368 17.6 0.001 4 Sample 11 1.41 0.142 4.93 0.001 5 Residual 38 0.991 0.0994 NA NA 6 Total 62 9.97 1 NA NA data.frame( Term = factor(rep(c(&quot;Extraction&quot;, &quot;Taxon&quot;, &quot;Species&quot;,&quot;Sample&quot;,&quot;Residual&quot;), times = 3),levels = c(&quot;Extraction&quot;, &quot;Taxon&quot;, &quot;Species&quot;,&quot;Sample&quot;,&quot;Residual&quot;)), Metric = factor(rep(c(&quot;Richness&quot;, &quot;Neutral&quot;, &quot;Phylogenetic&quot;), each = 5),levels = c(&quot;Richness&quot;, &quot;Neutral&quot;, &quot;Phylogenetic&quot;)), Value = c(richness$R2[-6],neutral$R2[-6],phylogenetic$R2[-6]) )%&gt;% ggplot(., aes(x = Metric, y = Value, fill = Term)) + geom_bar(stat = &quot;identity&quot;, position = &quot;stack&quot;) + #scale_fill_brewer(palette = &quot;Set1&quot;) + # Choose a color palette scale_fill_manual(values = c(&quot;#47bfb6&quot;, &quot;#4a7015&quot;, &quot;#5e1717&quot;, &quot;#9e6b24&quot;, &quot;#4a4a4a&quot;)) + labs( x = &quot;Beta diversity metric&quot;, y = &quot;R-square&quot;, fill = &quot;Term&quot; ) + theme_minimal() genome_counts_NMDS &lt;- genome_counts_filt_variance %&gt;% #column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;dist&quot;) %&gt;% metaMDS(.,trymax = 999, k=2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;dataset&quot;) %&gt;% left_join(sample_metadata, by = join_by(dataset == dataset)) %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% group_by(Sample) %&gt;% mutate(sample_x=mean(NMDS1), sample_y=mean(NMDS2)) genome_counts_NMDS %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Species, shape=Extraction)) + scale_color_manual(values=vertebrate_colors) + geom_point(size=3, alpha=0.8) + geom_segment(aes(x=sample_x, y=sample_y, xend=NMDS1, yend=NMDS2), alpha=0.2) + theme_classic() + theme(legend.position=&quot;right&quot;, legend.box=&quot;vertical&quot;) + guides(color=guide_legend(title=&quot;Species&quot;)) "],["sample-digestion.html", "6 Sample homogeneisation and digestion 6.1 Instruments, plasticware and reagents 6.2 Protocol", " 6 Sample homogeneisation and digestion Homogenisation and digestion of biological samples like faeces or intestinal contents are crucial steps in the process of DNA extraction. These steps help break down the complex matrix of the sample, thus separating different compounds and molecules from each other. Faeces, for example, are composed of a heterogeneous mixture of materials, including undigested food, microbial cells, host cells, and waste products. This complex matrix can make it challenging to access and extract DNA. Homogenisation involves breaking down the solid and semi-solid components of the sample, creating a more uniform mixture that is easier to work with, while digestion also entails degrading cellular structures to release intracellular compounds to the matrix. The EHI samples are stored in a buffer that serves a dual purpose as both a preservative and a digestion buffer. The buffer facilitates the release of nucleic acids from cells and tissues through breaking down cellular membranes and structures. The EHI protocol also includes bead-beating using a combination of ceramic, silica and glass beads for sample homogenisation. The mechanical force generated by the beads’ movement and collision with the sample causes physical disruption, breaking apart cells and releasing their contents into the surrounding solution. Optimisation of bead-beating conditions is necessary to balance efficient disruption with minimal degradation, as depending on the sample, bead types, and shearing time, there is a potential risk of shearing or damaging sensitive biomolecules. 6.1 Instruments, plasticware and reagents Instruments Bead mill/beater homogenizer e.g. TissueLyser II (Qiagen) Analytical balance (for tissue sample) Block Heater-Shaker e.g. ThermoMixer C (Eppendorf) (for tissue sample) SAFE® Screw Cap De-/Capper (LVL technologies) SAFE® 2D/1D Code Reader (LVL technologies) Plasticware Item Brand Catalogue number Lysing Matrix E 96-Well Plate MP Biomedicals 116984001-CF Polystyrene Tweezer (Single packed disposable sterile) Megro Carbon steel surgical scalpel blades (Single packed sterile) 1C-X10-BL-CW-B-S LX 1000 - 2D Biobanking Tubes LVL technologies 1C-X10-BL-CW-B-S Reagents Reagent | Brand | Catalogue number | Storage | UltraPure™ 1M Tris Hydrochloride, Tris-HCI | Invitrogen | 15568025 | 4 ºC | UltraPure™ 0.5M Ethylenediaminetetraacetic acid, EDTA | Invitrogen | 15575-038 | 25 ºC | BioUltra Sodium dodecyl sulfate solution, SDS | Sigma Aldrich | 71736 | 25 ºC | Proteinase K 20 mg/ml | Roche | 3115828001 | 4 ºC | 6.2 Protocol Faeces and swabs Thaw the samples and ensure samples have entirely thawed. Spin down or gently centrifuge tubes briefly to remove any liquid from the lid. Add the content of 1 well of the Lysing Matrix E 96-Well Plate to each collection tube. Vortex to ensure that the beads are moving in each sample. If beads are not moving despite vortexing, it is an indication of overstuffing the sample. Consider using a sterile pipet tip to attempt unclogging the beads. Homogenise the sample with the TissueLyser for two rounds of 6 minutes at max speed (=30 Hz). Spin down or centrifuge the tubes at 2,2 g/rcf for 1 minute. Ensure no foam is present on the tube’s lids. Otherwise, repeat centrifugation. Gently transfer the supernatant to an LX 1000 LVL tube without disturbing the pellet+beads. Tissue samples Extract the tissue from the original preservation tube, dry it out and weight it on a sterile weighing boat. If the tissue sample is heavier than 10 mg, cut a portion using a sterile scalpel and place it in an Eppendorf tube Add 250 μl of SDS lysis buffer solution to the tube and 25 μl of proteinase K. Incubation overnight at 56°C on a a thermoshaker. Centrifuge/Spin Down** the tubes at 2,2 g/rcf for 1 minutes. Ensure no foam is present on the tube’s lids. Otherwise, repeat centrifugation. Transfer the digested sample to an LX 1000 LVL tube. "],["Zymo-dna-extraction.html", "7 ZYMO DNA extraction 7.1 Instruments, plasticware and reagents 7.2 Protocol", " 7 ZYMO DNA extraction DNA extraction involves isolating DNA molecules from the rest of organic materials in the mixture, as well as removing inhibitors such as polysaccharides, proteins and bile salts, which can affect downstream enzymatic reactions, such as adaptor ligation or PCR amplification. The DNA extraction procedure employed in the EHI involves DNA isolation using silica magnetic beads combined with solid-phase reversible immobilisation (SPRI) to remove as many inhibitors as possible. This technique takes advantage of the binding properties of silica magnetic beads to selectively capture DNA fragments, followed by the principle of SPRI to efficiently remove impurities and elute the purified DNA. 7.1 Instruments, plasticware and reagents Instruments Block Heater-Shaker such as ThermoMixer C (Eppendorf) (for tissue sample) Magnet compatible with V-Bottom 96-well plates such as Magnum™ EX Universal 96-well Magnet Plate (Alpaca, SKU: A000380) Fluorometer such as Qubit Flex Fluorometer (Invitrogen) SAFE® Screw Cap De-/Capper (LVL technologies) SAFE® 2D/1D Code Reader (LVL technologies) Plasticware Item Brand Catalogue number 96-well V-shaped 1ml microplate 4titude 4ti-0125 XSX 200 - 2D Biobanking Tubes LVL technologies 1C-X02-BL-CW-B-L Self-adhesive aluminium foil LVL technologies AF100Plus Thin-walled polypropylene tubes with very low fluorescence compatible with Fluorometer such as Qubit Flex Assay Tube Strips Invitrogen Q33252 Stock reagents Reagent Brand Catalogue number Storage Deionized ultrapure water (ddH2O) Bionordika BN-51100 25 ºC ZymoBIOMICS MagBead DNA/RNA Zymo Research R2135/R2136 25 ºC Qubit DNA HS Assay Kit Invitrogen Q32851 4 ºC Qubit DNA BR Assay Kit Invitrogen Q32850 4 ºC 7.2 Protocol Total Nucleic Acid Purification Add 200 µl (1 volume) DNA/RNA Lysis Buffer to 200 µl sample and mix well. Add 400 µl ethanol (95-100%) to the sample and mix well. Add 30 µl ZymoBIOMICS™ MagBinding Beads* and mix well for 20 minutes (21ºC, 1000 rpm). *ZymoBIOMICS™ MagBinding Beads settle quickly, ensure that beads are kept in suspension while dispensing. Transfer the plate/tube to the magnetic stand2 until beads have pelleted, then aspirate and discard the cleared supernatant. Add 500 µl MagBead DNA/RNA Wash 1 and mix well. Pellet the beads and discard the supernatant. Add 500 µl MagBead DNA/RNA Wash 2 and mix well. Pellet the beads and discard the supernatant. Add 500 µl ethanol (95-100%) and mix well. Pellet the beads and discard the supernatant. Repeat step 7. Dry the beads for 10 minutes or until dry. To elute DNA/RNA from the beads, add 50 µl ZymoBIOMICS™ DNase/RNase-Free Water and mix well for 5 minutes. Transfer the plate/tube to the magnetic stand until beads have pelleted, then aspirate and dispense the eluted DNA/RNA to a new plate/tube. The eluted DNA/RNA can be used immediately or stored frozen. Use 2 µl to selectively quantify DNA using the Qubit DNA HS or BR Assay Kit and a Qubit Fluorometer. Place the plate on the magnetic rack. Transfer the Nucleic Acid extract to a 200 µl LVL tube. Store the 200 µl LVL tube plate at -80ºC until further processing. "],["drex-dna-extraction.html", "8 DREX DNA extraction 8.1 Instruments, plasticware and reagents 8.2 Preparation of working reagents 8.3 Protocol", " 8 DREX DNA extraction DNA extraction involves isolating DNA molecules from the rest of organic materials in the mixture, as well as removing inhibitors such as polysaccharides, proteins and bile salts, which can affect downstream enzymatic reactions, such as adaptor ligation or PCR amplification. The DNA extraction procedure employed in the EHI involves DNA isolation using silica magnetic beads combined with solid-phase reversible immobilisation (SPRI) to remove as many inhibitors as possible. This technique takes advantage of the binding properties of silica magnetic beads to selectively capture DNA fragments, followed by the principle of SPRI to efficiently remove impurities and elute the purified DNA. 8.1 Instruments, plasticware and reagents Instruments Block Heater-Shaker such as ThermoMixer C (Eppendorf) (for tissue sample) Magnet compatible with V-Bottom 96-well plates such as Magnum™ EX Universal 96-well Magnet Plate (Alpaca, SKU: A000380) Fluorometer such as Qubit Flex Fluorometer (Invitrogen) SAFE® Screw Cap De-/Capper (LVL technologies) SAFE® 2D/1D Code Reader (LVL technologies) Plasticware Item Brand Catalogue number Millex-GP 0.22 µm Syringe Filter Millipore SLGV013SL Syringe (Single packed disposable sterile) 96-well V-shaped 1ml microplate 4titude 4ti-0125 XSX 200 - 2D Biobanking Tubes LVL technologies 1C-X02-BL-CW-B-L Self-adhesive aluminium foil LVL technologies AF100Plus Thin-walled polypropylene tubes with very low fluorescence compatible with Fluorometer such as Qubit Flex Assay Tube Strips Invitrogen Q33252 Stock reagents Reagent Brand Catalogue number Storage Deionized ultrapure water (ddH2O) Bionordika BN-51100 25 ºC Absolute ethanol, EtOH 25 ºC BioUltra Citric acid Sigma-Aldrich 27487 25 ºC BioUltra Citrate Concentrate Solution (1M) Sigma-Aldrich 83273-250ML-F 25 ºC Guanidine thiocyanate (GuSCN) Sigma-Aldrich G9277 25 ºC N-Lauroylsarcosine sodium salt solution Sigma-Aldrich L7414-50ML RT BioReagent 2-Isopropanol  Sigma-Aldrich I9516-500ML 25 ºC Hydrochloric acid solution (1M), HCl Sigma-Aldrich 25 ºC BioUltra Sodium Hydroxide solution (10M), NaOH Sigma-Aldrich 72068-100ML 25 ºC TWEEN® 20 Sigma-Aldrich P9416-50ML 25 ºC Silica magnetic beads G-Biosciences 786-916 4ºC Elution Buffer (EB) Qiagen 19086 25 ºC Qubit DNA HS Assay Kit Invitrogen Q32851 4 ºC Qubit DNA BR Assay Kit Invitrogen Q32850 4 ºC 8.2 Preparation of working reagents Citrate buffer (0.1 M, ph 5.0) To prepare a stock of 50ml: In a 50 mL centrifuge tube, prepare Citric acid stock solution (1 M) by dissolving 9.60 g of citric acid powder (molecular weight = 192.12 g/mol) in H2O to a final volume of 50 mL. In a 50 mL centrifuge tube, dilute Citric acid stock solution 1:10 to reach a 0.1 M solution with H2O. In a 50 mL centrifuge tube, dilute Trisodium citrate/Citrate Concentrate solution (1 M) 1:10 to reach a 0.1 M solution with H2O. In a 50 mL centrifuge tube, combine 17.5 mL of Citric acid solution (0.1 M) with 32.5 mL of Trisodium citrate/Citrate Concentrate solution (0.1 M). Check that pH is around 5.0 and adjust if needed using NAOH (10M). Buffer B To prepare a stock of 50ml: Weigh 29.54 g of Guanidine thiocyanate (GuSCN) using a large weighing boat. Add the GuSCN to a sterile PC or glass bottle (150 mL). Add 20 mL H2O, 5 mL of Citrate buffer (0.1 M) and a sterile stirring bar. Place the solution (approximately 45 mL) on the magnetic stirrer to dissolve completely. Add 2.5 mL of N-Lauroylsarcosine sodium salt solution (20%, pH 7-9). Add H2O to a final volume of 50 mL. Filter with a 0.22 µm Syringe Filter. Check that pH is around 5.0 and adjust if needed using NAOH (10M). Buffer C - DNA fraction To prepare a stock of 50ml: Weigh 11.82 g of Guanidine thiocyanate (GuSCN) using a large weighing boat. Add the GuSCN to a sterile PC or glass bottle (150 mL). Add 5 mL H2O, 5 mL of Citrate buffer (0.1 M) and a sterile stirring bar. Place the solution on the magnetic stirrer to dissolve completely. Add 30 mL of Isopropanol (2-Propanol). Add 25 µl of Tween20. Filter with a 0.22 µm Syringe Filter. Filter slowly to avoid filter overflowing. Check that pH is around 5.0 and adjust if needed using NAOH (10M). EBT buffer To prepare a stock of 50ml: In a 50 mL centrifuge tube, mix 50 ml of EB buffer with 25 µl of Tween20. Silica magnetic beads and buffer aliquots Switch on the Thermo Mixer and set to 15 minutes, 10 C, 1500 rpm [See ‘Protocol’ step 5]. Equilibrate* the silica magnetic beads to room temperature for 30 min. Create the aliquots of reagents needed according to the table below. Prepare reagents for around 10% overage samples. Ensure that beads are thoroughly resuspended before taking an aliquot. Working reagent Volume per sample Beads - DNA fraction 15 µl Buffer B 200 µl Buffer C - DNA fraction 200 µl 80% EtOH - DNA washing 400 µl Place the tube containing silica beads on a magnetic rack and wait until the beads are immobilised on the wall, and the supernatant is clear. Discard the clear supernatant. Add 2 mL of Tris-EDTA (TE) buffer to the tube. The TE buffer volume may be reduced according to the volume of the beads needed. The beads must be submerged during the wash step. Discard the supernatant. Repeat steps 6 and 7. Transfer “Beads - DNA fraction” to Buffer B. Mix well (by vortexing if you can avoid bubbles) the mixture “Beads - Buffer B”. *Store the silica magnetic beads (G-Biosciences) at 4°C. Do not freeze the silica magnetic beads (G-Biosciences) or store them near a magnetic source. 8.3 Protocol Ensure that the mixture “Beads - Buffer B” is properly mixed. Transfer 200 µl of the mixture to each well of the Deep Well microplate. Ensure samples have entirely thawed. Vortex and centrifuge/spin down the LVL rack for 30 seconds to remove any liquid from the LVL tube lid. Transfer 200 μL of each sample to the Deep Well microplate (from now refered to DNA plate). Seal the DNA plate with a self-adhesive aluminium foil and spin down. Incubate DNA plate: for 15 minutes at 10ºC with shaking at 1500 rpm. Spin down shortly at 1000 g. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Discard the supernatant. Remove the DNA plate from the magnet. Add 200 µl of Buffer C to each well and mix well by pipetting. Cover the DNA plate with an aluminium seal and spin down shortly. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Discard the supernatant. Remove the DNA plate from the magnet. Add 200 µl of 80% EtOH and mix well by pipetting. Place the DNA plate on the magnetic rack and wait until the supernatant is clear. Discard the supernatant. Repeat step 9, briefly spin down the plate to bring EtOH residues down and repeat step 10. Ensure that all residual ethanol is removed. Dry the beads for at least 5 minutes. Remove the DNA plate from the magnet. Add 50 µl of EBT buffer. Cover the DNA plate with an aluminium seal and spin down shortly. Incubate DNA plate: 5 minutes at 25 ºC with shaking at 1500 rpm. Spin down the DNA plate shortly at 1000 g. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Aspirate slowly (to avoid bead transfer) and transfer the supernatant with eluted DNA to a new plate. Use 2 µl to selectively quantify DNA using the Qubit DNA HS or BR Assay Kit and a Qubit Fluorometer. Place the plate on a magnetic rack. Transfer the DNA extract to a 200 µl LVL tube. Store the 200 µl LVL tube plate at -20ºC until further processing. "],["ehex-dna-extraction.html", "9 EHEX DNA extraction 9.1 Instruments, plasticware and reagents 9.2 Preparation of working reagents 9.3 Protocol", " 9 EHEX DNA extraction DNA extraction involves isolating DNA molecules from the rest of organic materials in the mixture, as well as removing inhibitors such as polysaccharides, proteins and bile salts, which can affect downstream enzymatic reactions, such as adaptor ligation or PCR amplification. The DNA extraction procedure employed in the EHI involves DNA isolation using silica magnetic beads combined with solid-phase reversible immobilisation (SPRI) to remove as many inhibitors as possible. This technique takes advantage of the binding properties of silica magnetic beads to selectively capture DNA fragments, followed by the principle of SPRI to efficiently remove impurities and elute the purified DNA. 9.1 Instruments, plasticware and reagents Instruments Block Heater-Shaker such as ThermoMixer C (Eppendorf) (for tissue sample) Magnet compatible with V-Bottom 96-well plates such as Magnum™ EX Universal 96-well Magnet Plate (Alpaca, SKU: A000380) Fluorometer such as Qubit Flex Fluorometer (Invitrogen) SAFE® Screw Cap De-/Capper (LVL technologies) SAFE® 2D/1D Code Reader (LVL technologies) Plasticware Item Brand Catalogue number Millex-GP 0.22 µm Syringe Filter Millipore SLGV013SL Syringe (Single packed disposable sterile) 96-well V-shaped 1ml microplate 4titude 4ti-0125 XSX 200 - 2D Biobanking Tubes LVL technologies 1C-X02-BL-CW-B-L Self-adhesive aluminium foil LVL technologies AF100Plus Thin-walled polypropylene tubes with very low fluorescence compatible with Fluorometer such as Qubit Flex Assay Tube Strips Invitrogen Q33252 Stock reagents Reagent Brand Catalogue number Storage Deionized ultrapure water (ddH2O) Bionordika BN-51100 25 ºC Absolute ethanol, EtOH 25 ºC BioUltra Citric acid Sigma-Aldrich 27487 25 ºC BioUltra Citrate Concentrate Solution (1M) Sigma-Aldrich 83273-250ML-F 25 ºC Guanidine thiocyanate (GuSCN) Sigma-Aldrich G9277 25 ºC BioReagent 2-Isopropanol  Sigma-Aldrich I9516-500ML 25 ºC Hydrochloric acid solution (1M), HCl Sigma-Aldrich 25 ºC BioUltra Sodium Hydroxide solution (10M), NaOH Sigma-Aldrich 72068-100ML 25 ºC TWEEN® 20 Sigma-Aldrich P9416-50ML 25 ºC Silica magnetic beads G-Biosciences 786-916 4ºC Elution Buffer (EB) Qiagen 19086 25 ºC Qubit DNA HS Assay Kit Invitrogen Q32851 4 ºC Qubit DNA BR Assay Kit Invitrogen Q32850 4 ºC 9.2 Preparation of working reagents Citrate buffer (0.1 M, ph 5.0) To prepare a stock of 50ml: In a 50 mL centrifuge tube, prepare Citric acid stock solution (1 M) by dissolving 9.60 g of citric acid powder (molecular weight = 192.12 g/mol) in H2O to a final volume of 50 mL. In a 50 mL centrifuge tube, dilute Citric acid stock solution 1:10 to reach a 0.1 M solution with H2O. In a 50 mL centrifuge tube, dilute Trisodium citrate/Citrate Concentrate solution (1 M) 1:10 to reach a 0.1 M solution with H2O. In a 50 mL centrifuge tube, combine 17.5 mL of Citric acid solution (0.1 M) with 32.5 mL of Trisodium citrate/Citrate Concentrate solution (0.1 M). Check that pH is around 5.0 and adjust if needed using NAOH (10M). Buffer C - DNA fraction To prepare a stock of 50ml: Weigh 11.82 g of Guanidine thiocyanate (GuSCN) using a large weighing boat. Add the GuSCN to a sterile PC or glass bottle (150 mL). Add 5 mL H2O, 5 mL of Citrate buffer (0.1 M) and a sterile stirring bar. Place the solution on the magnetic stirrer to dissolve completely. Add 30 mL of Isopropanol (2-Propanol). Add 25 µl of Tween20. Filter with a 0.22 µm Syringe Filter. Filter slowly to avoid filter overflowing. Check that pH is around 5.0 and adjust if needed using NAOH (10M). EBT buffer To prepare a stock of 50ml: In a 50 mL centrifuge tube, mix 50 ml of EB buffer with 25 µl of Tween20. Silica magnetic beads and buffer aliquots Switch on the Thermo Mixer and set to 15 minutes, 10 C, 1500 rpm [See ‘Protocol’ step 5] Equilibrate* the silica magnetic beads to room temperature for 30 min. Create the aliquots of reagents needed according to the table below. Prepare reagents for around 10% overage samples. Ensure the beads are thoroughly resuspended before taking an aliquot. Working reagent Volume per sample Beads - DNA fraction 15 µl Buffer C 200 µl 80% EtOH - DNA washing 400 µl Place the tube containing silica beads on a magnetic rack and wait until the beads are immobilised on the wall, and the supernatant is clear. Discard the clear supernatant. Add 2 mL of Tris-EDTA (TE) buffer to the tube. The TE buffer volume may be reduced according to the volume of the beads needed. The beads must be submerged during the wash step. Discard the supernatant. Repeat steps 6 and 7. Transfer “Beads - DNA fraction” to Buffer C. Mix well by vortexing (avoid bubbles if possible)”. *Store the silica magnetic beads (G-Biosciences) at 4°C. Do not freeze the silica magnetic beads (G-Biosciences) or store them near a magnetic source. 9.3 Protocol Ensure that the mixture “Beads - Buffer B” is properly mixed. Transfer 200 µl of the mixture to each well of the Deep Well microplate. Ensure samples have entirely thawed. Vortex and centrifuge/spin down the LVL rack for 30 seconds to remove any liquid from the LVL tube lid. Transfer 200 μL of each sample to the Deep Well microplate (from now refered to DNA plate). Seal the DNA plate with a self-adhesive aluminium foil and spin down. Incubate DNA plate: for 15 minutes at 10ºC with shaking at 1500 rpm. Spin down at 1000 g. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Discard the supernatant. Remove the DNA plate from the magnet. Add 200 µl of 80% EtOH and mix well by pipetting. Place the DNA plate on the magnetic rack and wait until the supernatant is clear. Discard the supernatant. Repeat step 7, briefly spin down the plate to bring EtOH residues down and repeat step 8. Ensure that all residual ethanol is removed. Dry the beads for at least 5 minutes. Remove the DNA plate from the magnet. Add 50 µl of EBT buffer. Cover the DNA plate with an aluminium seal and spin down shortly. Incubate DNA plate: 5 minutes at 25 ºC with shaking at 1500 rpm. Spin down the DNA plate shortly at 1000 g. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Aspirate slowly (to avoid bead transfer) and transfer the supernatant with eluted DNA to a new plate. Use 2 µl to selectively quantify DNA using the Qubit DNA HS or BR Assay Kit and a Qubit Fluorometer. Place the plate on a magnetic rack. Transfer the DNA extract to a 200 µl LVL tube. Use 2 µl to selectively quantify DNA using the Qubit DNA HS or BR Assay Kit and a Qubit Fluorometer. Store the 200 µl LVL tube plate at -20ºC until further processing. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]

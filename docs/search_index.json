[["index.html", "Earth Hologenome Initiative | Lauritsen et al. 2024 Robust, open-source, and automation-friendly DNA extraction protocol for hologenomic research 1 Introduction 1.1 Prepare the R environment", " Earth Hologenome Initiative | Lauritsen et al. 2024 Robust, open-source, and automation-friendly DNA extraction protocol for hologenomic research Jonas G. Laurisen, Christian Carøe, Nanna Gaun, Garazi Martin, Aoife Leonard, Raphael Eisenhofer, M Thomas P Gilbert, Ostaizka Aizpurua, Antton Alberdi1, Carlotta Pietroni 2024-10-30 1 Introduction This webbook contains all the code used for the comparative study on the generation of metagenomic data from faeces of various species using three extraction methods. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/earthhologenome/EHI_extraction_test.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(rairtable) library(devtools) library(tinytable) library(broom) library(broom.mixed) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(MuMIn) library(sjPlot) 1.1.3 Color codes vertebrate_colors &lt;- c(`Calotriton asper`=&quot;#157a73&quot;, `Lissotriton helveticus`=&quot;#47bfb6&quot;, `Salamandra atra`=&quot;#92d4d1&quot;, `Chalcides striatus`=&quot;#4a7015&quot;, `Natrix astreptophora`=&quot;#7ea845&quot;, `Podarcis muralis`=&quot;#b9d98d&quot;, `Plecotus auritus`=&quot;#5e1717&quot;, `Sciurus carolinensis`=&quot;#aa3333&quot;, `Trichosurus vulpecula`=&quot;#bf7777&quot;, `Geospizopsis unicolor`=&quot;#9e6b24&quot;, `Perisoreus infaustus`=&quot;#dba55a&quot;, `Zonotrichia capensis`=&quot;#dbbd93&quot;, `Extraction control`=&quot;#7a7a7a&quot;, `Library control`=&quot;#4a4a4a&quot;) University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["laboratory-performance.html", "2 Laboratory performance 2.1 Load data 2.2 DNA yield 2.3 Library performance", " 2 Laboratory performance 2.1 Load data Load data previously compiled from the database: all_data &lt;- read_tsv(&quot;data/all_data.tsv&quot;) %&gt;% mutate(Taxon=factor(Taxon,levels=c(&quot;Amphibian&quot;, &quot;Reptile&quot;, &quot;Mammal&quot;, &quot;Bird&quot;, &quot;Control&quot;))) %&gt;% mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;, &quot;DREX&quot;, &quot;EHEX&quot;))) %&gt;% mutate(Species=factor(Species,levels=c(&quot;Calotriton asper&quot;, &quot;Lissotriton helveticus&quot;, &quot;Salamandra atra&quot;, &quot;Chalcides striatus&quot;, &quot;Natrix astreptophora&quot;, &quot;Podarcis muralis&quot;, &quot;Plecotus auritus&quot;, &quot;Sciurus carolinensis&quot;, &quot;Trichosurus vulpecula&quot;, &quot;Geospizopsis unicolor&quot;, &quot;Perisoreus infaustus&quot;, &quot;Zonotrichia capensis&quot;, &quot;Extraction control&quot;, &quot;Library control&quot;))) 2.2 DNA yield Total amount of DNA extracted from the 150 ul subset of the bead-beaten sample. all_data %&gt;% select(Extraction,extract,Taxon) %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.0f±%.0f&quot;, mean(extract), sd(extract))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of total DNA nanograms&quot;) .table td.tinytable_css_idfqtx1wc7ini5rkivmtrv, .table th.tinytable_css_idfqtx1wc7ini5rkivmtrv { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of total DNA nanograms Taxon ZYMO DREX EHEX Amphibian 297±334 340±453 1138±1139 Reptile 102±68 162±128 250±171 Mammal 448±412 256±214 867±696 Bird 82±138 12±11 49±44 Control 0±0 2±3 1±0 all_data %&gt;% select(Library,Species,Extraction,extract,Taxon) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction, y=extract, color=Species, group=Extraction))+ geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;DNA yield (ng)&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(extract ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_ida1dz8qh3co8ynekvt0ha, .table th.tinytable_css_ida1dz8qh3co8ynekvt0ha { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 226.17826 121.77153 1.8573985 14.86338 8.317952e-02 fixed NA ExtractionDREX -38.63221 66.95883 -0.5769546 114.56845 5.651020e-01 fixed NA ExtractionEHEX 360.33085 66.95883 5.3813793 114.56845 3.971116e-07 ran_pars Sample sd__(Intercept) 141.12887 NA NA NA NA ran_pars Species sd__(Intercept) 375.19506 NA NA NA NA ran_pars Residual sd__Observation 321.12326 NA NA NA NA DNA yields vary across host taxa. - Amphibians and mammals yield the highest total amounts of DNA. - Birds yield the lowest amounts of DNA. - Controls yield barely quantifiable DNA. EHEX yields highest amounts of total DNA. - DNA recovery raks of extraction methods are maintained across taxa. 2.3 Library performance Number of PCR cycles required for reaching the plateau phase of the indexing PCR. A higher number indicates a lower amount of amplifiable library template. When weighed by the input DNA, the required number of PCR cycles serves as an estimator of library performance. all_data %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(pcr), sd(pcr))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of optimal number of PCR cycles&quot;) .table td.tinytable_css_id23gzln1b7x48g6nf1q6l, .table th.tinytable_css_id23gzln1b7x48g6nf1q6l { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of optimal number of PCR cycles Taxon ZYMO DREX EHEX Amphibian 14.2±2.0 10.8±3.2 10.2±2.5 Reptile 11.7±4.0 10.3±3.5 12.0±3.3 Mammal 11.0±3.8 10.2±1.9 10.3±2.1 Bird 17.9±2.6 18.5±4.0 14.6±2.3 Control 20.0±2.8 19.8±0.5 22.0±4.2 all_data %&gt;% select(Library,Species,Extraction,pcr,Taxon) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=pcr, color=Species, group=Extraction))+ scale_y_reverse() + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Optimal number of PCR cycles&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(pcr ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_id0vlyr10ydy0rjghh4ebx, .table th.tinytable_css_id0vlyr10ydy0rjghh4ebx { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 13.6825915 0.8835836 15.485339 16.43547 3.145707e-11 fixed NA ExtractionDREX -1.3043478 0.6080529 -2.145122 113.11217 3.408197e-02 fixed NA ExtractionEHEX -1.8478261 0.6080529 -3.038923 113.11217 2.949418e-03 ran_pars Sample sd__(Intercept) 0.7149524 NA NA NA NA ran_pars Species sd__(Intercept) 2.6212534 NA NA NA NA ran_pars Residual sd__Observation 2.9161193 NA NA NA NA "],["sequencing-data.html", "3 Sequencing data 3.1 Sequencing depth 3.2 Quality-filtering", " 3 Sequencing data 3.1 Sequencing depth tibble(metric=c(&quot;Total GB&quot;, &quot;Total reads&quot;, &quot;Average GB&quot;, &quot;Average reads&quot;), value=unlist(c(round(all_data %&gt;% summarise(sum(bases_pre_fastp)) / 1000000000,2), round(all_data %&gt;% summarise(sum(bases_pre_fastp)) / 300,2), paste0(round(all_data %&gt;% summarise(mean(bases_pre_fastp)) / 1000000000,2),&quot;±&quot;,round(all_data %&gt;% summarise(sd(bases_pre_fastp)) / 1000000000,2)), paste0(round(all_data %&gt;% summarise(mean(bases_pre_fastp)) / 300,0),&quot;±&quot;,round(all_data %&gt;% summarise(sd(bases_pre_fastp)) / 300,0)))) ) %&gt;% tt() .table td.tinytable_css_idyw8ak4rlrheg17weq36n, .table th.tinytable_css_idyw8ak4rlrheg17weq36n { border-bottom: solid 0.1em #d3d8dc; } metric value Total GB 780.99 Total reads 2603293168 Average GB 5.35±2.5 Average reads 17830775±8337232 all_data %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(bases_post_fastp / 1000000000), sd(bases_post_fastp / 1000000000))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of sequencing depth (GB)&quot;) .table td.tinytable_css_idy66trbhiins4f3i91jco, .table th.tinytable_css_idy66trbhiins4f3i91jco { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of sequencing depth (GB) Taxon ZYMO DREX EHEX Amphibian 4.0±1.4 4.2±2.2 4.7±0.4 Reptile 6.1±2.2 5.7±1.3 5.0±1.8 Mammal 5.5±3.1 4.6±2.1 3.8±2.4 Bird 3.7±1.8 3.8±2.4 2.9±1.9 Control 0.0±0.0 0.5±0.6 2.1±2.7 all_data %&gt;% select(Library,Species,Extraction,bases_pre_fastp,Taxon) %&gt;% mutate(bases_pre_fastp=bases_pre_fastp/1000000000) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=bases_pre_fastp, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Sequencing depth (Gb)&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(bases_post_fastp ~ Extraction * Taxon + (1 | Sample) + (1 | Species), data = .) %&gt;% summary() Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] Formula: bases_post_fastp ~ Extraction * Taxon + (1 | Sample) + (1 | Species) Data: . REML criterion at convergence: 5751 Scaled residuals: Min 1Q Median 3Q Max -2.46253 -0.64036 -0.01228 0.65264 2.05401 Random effects: Groups Name Variance Std.Dev. Sample (Intercept) 1.939e+18 1.393e+09 Species (Intercept) 4.441e+16 2.107e+08 Residual 2.333e+18 1.527e+09 Number of obs: 138, groups: Sample, 24; Species, 12 Fixed effects: Estimate Std. Error df t value Pr(&gt;|t|) (Intercept) 4.006e+09 7.296e+08 1.373e+01 5.490 8.54e-05 *** ExtractionDREX 1.749e+08 6.235e+08 3.220e+17 0.281 0.77908 ExtractionEHEX 6.507e+08 6.235e+08 3.589e+17 1.044 0.29666 TaxonReptile 2.119e+09 1.032e+09 1.373e+01 2.053 0.05959 . TaxonMammal 1.533e+09 1.032e+09 1.373e+01 1.486 0.15987 TaxonBird -4.757e+08 1.054e+09 1.486e+01 -0.451 0.65816 ExtractionDREX:TaxonReptile -6.439e+08 8.818e+08 1.936e+18 -0.730 0.46528 ExtractionEHEX:TaxonReptile -1.747e+09 8.818e+08 1.570e+18 -1.981 0.04757 * ExtractionDREX:TaxonMammal -1.134e+09 8.818e+08 1.233e+18 -1.286 0.19838 ExtractionEHEX:TaxonMammal -2.377e+09 8.818e+08 1.862e+18 -2.696 0.00703 ** ExtractionDREX:TaxonBird -1.548e+07 9.248e+08 2.470e+18 -0.017 0.98665 ExtractionEHEX:TaxonBird -1.423e+09 9.248e+08 3.473e+18 -1.539 0.12392 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) ExDREX ExEHEX TxnRpt TxnMmm TxnBrd EDREX:TR EEHEX:TR EDREX:TM EEHEX:TM EDREX:TB ExtrctnDREX -0.427 ExtrctnEHEX -0.427 0.500 TaxonReptil -0.707 0.302 0.302 TaxonMammal -0.707 0.302 0.302 0.500 TaxonBird -0.692 0.296 0.296 0.490 0.490 ExtrDREX:TR 0.302 -0.707 -0.354 -0.427 -0.214 -0.209 ExtrEHEX:TR 0.302 -0.354 -0.707 -0.427 -0.214 -0.209 0.500 ExtrDREX:TM 0.302 -0.707 -0.354 -0.214 -0.427 -0.209 0.500 0.250 ExtrEHEX:TM 0.302 -0.354 -0.707 -0.214 -0.427 -0.209 0.250 0.500 0.500 ExtrDREX:TB 0.288 -0.674 -0.337 -0.204 -0.204 -0.439 0.477 0.238 0.477 0.238 ExtrEHEX:TB 0.288 -0.337 -0.674 -0.204 -0.204 -0.439 0.238 0.477 0.238 0.477 0.500 3.2 Quality-filtering all_data %&gt;% mutate(qf_bases=bases_post_fastp/bases_pre_fastp*100) %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(qf_bases), sd(qf_bases))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of quality-filtered proportion of reads&quot;) .table td.tinytable_css_iddv4whgr1wfrt0yf9garr, .table th.tinytable_css_iddv4whgr1wfrt0yf9garr { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of quality-filtered proportion of reads Taxon ZYMO DREX EHEX Amphibian 84.6±1.4 91.1±4.6 87.5±3.8 Reptile 89.9±6.3 90.5±7.1 88.3±7.2 Mammal 92.2±2.3 89.0±4.8 91.3±1.8 Bird 68.7±16.6 67.3±24.0 69.4±15.2 Control 3.3±2.3 9.8±11.5 27.5±3.4 all_data %&gt;% mutate(qf_bases=bases_post_fastp/bases_pre_fastp*100) %&gt;% select(Library,Species,Extraction,qf_bases,Taxon) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=qf_bases, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;High-quality data (%)&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% mutate(qf_bases=bases_post_fastp/bases_pre_fastp*100) %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(qf_bases ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idueov3jc0m9v231ptbefm, .table th.tinytable_css_idueov3jc0m9v231ptbefm { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 83.4574095 3.284730 25.4076928 13.68382 6.547707e-13 fixed NA ExtractionDREX 0.6873784 1.585075 0.4336567 110.14680 6.653859e-01 fixed NA ExtractionEHEX 0.2482281 1.585075 0.1566034 110.14680 8.758441e-01 ran_pars Sample sd__(Intercept) 7.0203187 NA NA NA NA ran_pars Species sd__(Intercept) 9.4645983 NA NA NA NA ran_pars Residual sd__Observation 7.6017525 NA NA NA NA "],["genomic-data.html", "4 Genomic data 4.1 Read duplicates 4.2 Depth of coverage 4.3 Breadth of coverage 4.4 Breadth vs. coverage", " 4 Genomic data 4.1 Read duplicates all_data %&gt;% select(dataset,Extraction,duplicates,Taxon) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(duplicates), sd(duplicates))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of fraction of duplicated reads&quot;) .table td.tinytable_css_id0atinzvwfbviqhy4odvo, .table th.tinytable_css_id0atinzvwfbviqhy4odvo { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of fraction of duplicated reads Taxon ZYMO DREX EHEX Amphibian 0.3±0.2 0.2±0.2 0.2±0.2 Reptile 0.5±0.4 0.3±0.3 0.4±0.4 Mammal 0.4±0.4 0.2±0.1 0.2±0.2 Bird 0.8±0.3 0.9±0.1 0.6±0.4 Control 1.0±0.0 0.9±0.0 1.0±0.0 all_data %&gt;% select(dataset,Extraction,duplicates,Taxon, Species) %&gt;% mutate(duplicates=duplicates*100) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=duplicates, color=Species, group=Extraction)) + scale_y_reverse() + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Duplication rate (%)&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dataset,Sample,Species,Extraction,duplicates,Taxon) %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(duplicates ~ Extraction * Taxon + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% plot() #anova() #r.squaredGLMM() 4.2 Depth of coverage all_data %&gt;% select(dataset,Extraction,coverage_depth,Taxon) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(coverage_depth), sd(coverage_depth))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of fraction of duplicated reads&quot;) .table td.tinytable_css_id2g1dws6yu3c8rbtn6jyg, .table th.tinytable_css_id2g1dws6yu3c8rbtn6jyg { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of fraction of duplicated reads Taxon ZYMO DREX EHEX Amphibian 0.0±0.0 0.0±0.0 0.0±0.0 Reptile 0.2±0.3 0.1±0.1 0.1±0.1 Mammal 0.7±1.2 0.3±0.4 0.5±1.0 Bird 0.4±0.8 0.6±0.5 0.8±0.8 Control 0.0±0.0 0.0±0.0 0.0±0.0 all_data %&gt;% select(dataset,Extraction,coverage_depth,Taxon, Species) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=coverage_depth, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Depth of coverage&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dataset,Sample,Species,Extraction,coverage_depth,Taxon) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(coverage_depth ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idjvfhor29v96rd17t11yb, .table th.tinytable_css_idjvfhor29v96rd17t11yb { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 0.329125000 0.1331063 2.47264850 20.58494 0.02222872 fixed NA ExtractionDREX -0.089791667 0.1144640 -0.78445305 48.00000 0.43662873 fixed NA ExtractionEHEX -0.002791667 0.1144640 -0.02438903 48.00000 0.98064341 ran_pars Sample sd__(Intercept) 0.408634577 NA NA NA NA ran_pars Species sd__(Intercept) 0.224731208 NA NA NA NA ran_pars Residual sd__Observation 0.396515070 NA NA NA NA 4.3 Breadth of coverage all_data %&gt;% select(dataset,Extraction,coverage_breadth,Taxon) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(coverage_breadth), sd(coverage_breadth))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of depth of host genome coverage&quot;) .table td.tinytable_css_id93s7n9dk6hs1jahu2der, .table th.tinytable_css_id93s7n9dk6hs1jahu2der { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of depth of host genome coverage Taxon ZYMO DREX EHEX Amphibian 0.0±0.0 0.0±0.0 0.0±0.0 Reptile 4.9±7.5 3.0±5.4 2.9±3.7 Mammal 5.7±5.9 10.2±16.4 15.1±26.4 Bird 0.6±0.5 3.2±4.4 8.9±13.9 Control 0.0±0.0 0.0±0.0 0.0±0.0 all_data %&gt;% select(dataset,Extraction,coverage_breadth,Taxon,Species) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=coverage_breadth, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Breadth of coverage (%)&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dataset,Extraction,Sample,Species,coverage_breadth,Taxon) %&gt;% unique() %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(coverage_breadth ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_ido1hnr5n3jgw9hukplfey, .table th.tinytable_css_ido1hnr5n3jgw9hukplfey { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 2.799167 2.252826 1.2425133 20.82558 0.22785670 fixed NA ExtractionDREX 1.301250 1.956426 0.6651158 48.00000 0.50915975 fixed NA ExtractionEHEX 3.918750 1.956426 2.0030144 48.00000 0.05084021 ran_pars Sample sd__(Intercept) 7.118462 NA NA NA NA ran_pars Species sd__(Intercept) 3.549767 NA NA NA NA ran_pars Residual sd__Observation 6.777259 NA NA NA NA 4.4 Breadth vs. coverage all_data_log &lt;- all_data %&gt;% mutate(coverage_breadth_log=log(coverage_breadth)) %&gt;% mutate(coverage_depth_log=log(coverage_depth)) lm_eq &lt;- lm(coverage_breadth_log ~ coverage_depth_log, data = all_data_log %&gt;% filter(coverage_depth_log != -Inf ,coverage_breadth_log != -Inf)) coef &lt;- coef(lm_eq) all_data_log$coverage_breadth_log_pred &lt;- coef[1] + coef[2] * all_data_log$coverage_depth_log all_data_log %&gt;% select(dataset,Extraction,coverage_depth_log,coverage_breadth_log,coverage_breadth_log_pred,Taxon,Species,Sample) %&gt;% unique() %&gt;% ggplot(aes(x=coverage_depth_log,y=coverage_breadth_log)) + geom_point(aes(color=Species, shape=Extraction),size=3, alpha=0.9) + geom_segment(aes(x = coverage_depth_log, y = coverage_breadth_log, xend = coverage_depth_log, yend = coverage_breadth_log_pred, color=Species), alpha=0.9)+ geom_smooth(method = lm, se = FALSE, color=&quot;#666666&quot;) + scale_color_manual(values=vertebrate_colors) + theme_minimal() + labs(y=&quot;Breadth of coverage (%)&quot;,x=&quot;Depth of coverage&quot;) "],["metagenomic-data.html", "5 Metagenomic data 5.1 Library complexity 5.2 Alpha diversity 5.3 Microbial complexity recovery 5.4 Variance partitioning 5.5 Combined community analysis", " 5 Metagenomic data Species-specific community analyses conducted to generate the data included in these analyses can be found in the annex. Amphibians Calotriton asper Lissotriton helveticus Salamandra atra Birds Geospizopsis unicolor Perisoreus infaustus Zonotrichia capensis Mammals Plecotus auritus Sciurus carolinensis Trichosurus vulpecula Reptiles Chalcides striatus Natrix astreptophora Podarcis muralis 5.1 Library complexity Nonpareil estimate of the metagenomic complexity after removing host DNA. all_data %&gt;% select(dataset,Extraction,nonpareil,Taxon) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(nonpareil), sd(nonpareil))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of breadth of host genome coverage&quot;) .table td.tinytable_css_idslhfte2fvo4ltwmbjm3j, .table th.tinytable_css_idslhfte2fvo4ltwmbjm3j { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of breadth of host genome coverage Taxon ZYMO DREX EHEX Amphibian 0.9±0.1 0.8±0.1 0.8±0.1 Reptile 0.9±0.1 0.9±0.0 0.9±0.1 Mammal 0.8±0.2 0.8±0.1 0.7±0.3 Bird 0.9±0.1 1.0±0.0 0.8±0.4 Control 0.0±0.0 0.5±0.6 0.5±0.7 all_data %&gt;% select(dataset,Extraction,nonpareil,Taxon,Species) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=nonpareil, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Nonpareil completeness&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dataset,Extraction,Sample,Species,nonpareil,Taxon) %&gt;% unique() %&gt;% mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(nonpareil ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idewuppkrw3djwliecdlhw, .table th.tinytable_css_idewuppkrw3djwliecdlhw { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 0.885552853 0.03450229 25.6664948 40.89542 7.753071e-27 fixed NA ExtractionDREX 0.005536892 0.04336611 0.1276779 48.00020 8.989373e-01 fixed NA ExtractionEHEX -0.112193866 0.04336611 -2.5871326 48.00020 1.276294e-02 ran_pars Sample sd__(Intercept) 0.059565487 NA NA NA NA ran_pars Species sd__(Intercept) 0.035030813 NA NA NA NA ran_pars Residual sd__Observation 0.150224598 NA NA NA NA 5.2 Alpha diversity Variance partitioning metrics are derived from community_analysis.Rmd. alpha_data &lt;- list.files(path = &quot;results&quot;, pattern = &quot;^alpha_.*\\\\.tsv$&quot;, full.names = TRUE) %&gt;% map_df(~ read_tsv(.)) %&gt;% left_join(all_data,by= join_by(dataset==dataset)) alpha_data %&gt;% select(dataset,Library,Species,Taxon,Sample,Extraction,richness,neutral,phylogenetic) %&gt;% pivot_longer(!c(dataset,Library,Species,Taxon,Sample,Extraction), names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% filter(metric %in% c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;)) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% mutate(Taxon=factor(Taxon,levels=c(&quot;Amphibian&quot;,&quot;Reptile&quot;,&quot;Mammal&quot;))) %&gt;% mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=value, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(metric ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Diversity&quot;,x=&quot;Extraction method&quot;) 5.2.1 Richness alpha_data %&gt;% select(dataset,Extraction,Sample,Species,richness,Taxon) %&gt;% unique() %&gt;% mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% lmerTest::lmer(richness ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idamj3e2ne1ztfbebvs5n9, .table th.tinytable_css_idamj3e2ne1ztfbebvs5n9 { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 59.44444444 10.715517 5.5475108 10.12322 0.000234351 fixed NA ExtractionDREX 0.05555556 4.453352 0.0124750 34.97883 0.990117532 fixed NA ExtractionEHEX 1.38257472 4.545332 0.3041746 35.13134 0.762789322 ran_pars Sample sd__(Intercept) 16.00359332 NA NA NA NA ran_pars Species sd__(Intercept) 28.56742258 NA NA NA NA ran_pars Residual sd__Observation 13.36005511 NA NA NA NA 5.2.2 Neutral alpha_data %&gt;% select(dataset,Extraction,Sample,Species,neutral,Taxon) %&gt;% unique() %&gt;% mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% lmerTest::lmer(neutral ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idfiqhehtto9m7ovqpi1vb, .table th.tinytable_css_idfiqhehtto9m7ovqpi1vb { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 29.5413181 5.139162 5.7482754 9.895197 0.000193227 fixed NA ExtractionDREX -2.1102758 1.922343 -1.0977625 35.042971 0.279794105 fixed NA ExtractionEHEX -0.3422373 1.962694 -0.1743712 35.152526 0.862574163 ran_pars Sample sd__(Intercept) 8.6429526 NA NA NA NA ran_pars Species sd__(Intercept) 13.5543072 NA NA NA NA ran_pars Residual sd__Observation 5.7670282 NA NA NA NA 5.2.3 Phylogenetic alpha_data %&gt;% select(dataset,Extraction,Sample,Species,phylogenetic,Taxon) %&gt;% unique() %&gt;% mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% lmerTest::lmer(phylogenetic ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idfxqkea5cwf1q78ptsazw, .table th.tinytable_css_idfxqkea5cwf1q78ptsazw { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 4.7721984 0.4324985 11.034024 9.653749 8.685117e-07 fixed NA ExtractionDREX 0.1521100 0.1403528 1.083769 35.015284 2.858737e-01 fixed NA ExtractionEHEX 0.1852709 0.1433723 1.292236 35.056809 2.047290e-01 ran_pars Sample sd__(Intercept) 1.2179889 NA NA NA NA ran_pars Species sd__(Intercept) 0.9236345 NA NA NA NA ran_pars Residual sd__Observation 0.4210584 NA NA NA NA 5.3 Microbial complexity recovery all_data %&gt;% select(dataset,Extraction,microbial_fraction,MAG_mapping_percentage,Taxon) %&gt;% mutate(damr=pmin(1,MAG_mapping_percentage/(microbial_fraction*100))) %&gt;% mutate(damr=ifelse(is.na(damr),0,damr)) %&gt;% unique() %&gt;% group_by(Taxon,Extraction) %&gt;% summarise(value = sprintf(&quot;%.1f±%.1f&quot;, mean(damr), sd(damr))) %&gt;% pivot_wider(names_from = Extraction, values_from = value) %&gt;% tt(caption = &quot;Mean and standard deviation of breadth of host genome coverage&quot;) .table td.tinytable_css_idzeiqoxpvct4q4uqoe83g, .table th.tinytable_css_idzeiqoxpvct4q4uqoe83g { border-bottom: solid 0.1em #d3d8dc; } Mean and standard deviation of breadth of host genome coverage Taxon ZYMO DREX EHEX Amphibian 0.0±0.0 0.0±0.0 0.0±0.0 Reptile 0.0±0.0 0.0±0.0 0.0±0.0 Mammal 0.0±0.0 0.2±0.4 0.1±0.3 Bird 0.0±0.0 0.1±0.3 0.3±0.5 Control 1.0±0.0 0.5±0.6 0.5±0.7 all_data %&gt;% select(dataset,Extraction,microbial_fraction,MAG_mapping_percentage,Taxon,Sample,Species) %&gt;% mutate(damr=pmin(1,MAG_mapping_percentage/(microbial_fraction*100))) %&gt;% mutate(damr=ifelse(is.na(damr),0,damr)) %&gt;% unique() %&gt;% ggplot(aes(x=Extraction,y=damr, color=Species, group=Extraction)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter() + scale_color_manual(values=vertebrate_colors) + facet_grid(. ~ Taxon, scales = &quot;free&quot;) + theme_minimal() + labs(y=&quot;Domain-adjusted mapping rate&quot;,x=&quot;Extraction method&quot;) all_data %&gt;% select(dataset,Extraction,microbial_fraction,MAG_mapping_percentage,Taxon, Sample, Species) %&gt;% mutate(damr=pmin(1,MAG_mapping_percentage/(microbial_fraction*100))) %&gt;% mutate(damr=ifelse(is.na(damr),0,damr)) %&gt;% unique() %&gt;% mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% lmerTest::lmer(damr ~ Extraction + (1 | Sample) + (1 | Species), data = ., REML = FALSE) %&gt;% broom.mixed::tidy() %&gt;% tt() .table td.tinytable_css_idca3e3tnvi5vcdoptlbur, .table th.tinytable_css_idca3e3tnvi5vcdoptlbur { border-bottom: solid 0.1em #d3d8dc; } effect group term estimate std.error statistic df p.value fixed NA (Intercept) 1.602043e-02 0.03835560 0.4176817 40.85575 0.67836686 fixed NA ExtractionDREX 6.513848e-02 0.03562398 1.8285012 110.70011 0.07016679 fixed NA ExtractionEHEX 8.644891e-02 0.03562398 2.4267058 110.70011 0.01685064 ran_pars Sample sd__(Intercept) 1.412328e-01 NA NA NA NA ran_pars Species sd__(Intercept) 1.038883e-05 NA NA NA NA ran_pars Residual sd__Observation 1.708466e-01 NA NA NA NA 5.4 Variance partitioning Variance partitioning metrics are derived from community_analysis.Rmd. variance_data &lt;- list.files(path = &quot;results&quot;, pattern = &quot;^var_.*\\\\.tsv$&quot;, full.names = TRUE) %&gt;% map_df(~ read_tsv(.)) variance_data %&gt;% summarise(mean=mean(r2),sd=sd(r2)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.219 0.299 variance_data %&gt;% left_join(all_data %&gt;% select(Species,Taxon) %&gt;% unique(),by=join_by(species==Species)) %&gt;% mutate(metric=factor(metric,levels=c(&quot;phylogenetic&quot;,&quot;neutral&quot;,&quot;richness&quot;))) %&gt;% mutate(Taxon=factor(Taxon,levels=c(&quot;Amphibian&quot;,&quot;Reptile&quot;,&quot;Mammal&quot;))) %&gt;% ggplot(aes(x=r2,y=metric)) + geom_boxplot(outlier.shape = NA, fill=&quot;#f4f4f4&quot;, color=&quot;#8c8c8c&quot;) + geom_jitter(aes(color=species))+ scale_color_manual(values=vertebrate_colors) + xlim(0,0.5)+ theme_minimal() + labs(y=&quot;Diversity metric&quot;,x=&quot;Explained variance&quot;) variance_data %&gt;% group_by(metric) %&gt;% summarise(mean=mean(r2),sd=sd(r2)) %&gt;% tt() .table td.tinytable_css_idbdm02egguhe5z59fbtgw, .table th.tinytable_css_idbdm02egguhe5z59fbtgw { border-bottom: solid 0.1em #d3d8dc; } metric mean sd neutral 0.1837986 0.3278652 phylogenetic 0.1961002 0.3276173 richness 0.2777702 0.2694940 5.5 Combined community analysis species=&quot;combined&quot; genus=species sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0134/DMB0134_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0134/DMB0134_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0134/DMB0134_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0134/DMB0134.tree.gz&quot;, &quot;data/DMB0134.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0134.tree.gz&quot;) 5.5.1 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 5.5.2 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% mutate(Taxon=factor(Taxon,levels=c(&quot;Amphibian&quot;, &quot;Reptile&quot;, &quot;Mammal&quot;, &quot;Bird&quot;, &quot;Control&quot;))) %&gt;% mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;, &quot;DREX&quot;, &quot;EHEX&quot;))) %&gt;% mutate(Species=factor(Species,levels=c(&quot;Calotriton asper&quot;, &quot;Lissotriton helveticus&quot;, &quot;Salamandra atra&quot;, &quot;Chalcides striatus&quot;, &quot;Natrix astreptophora&quot;, &quot;Podarcis muralis&quot;, &quot;Plecotus auritus&quot;, &quot;Sciurus carolinensis&quot;, &quot;Trichosurus vulpecula&quot;, &quot;Geospizopsis unicolor&quot;, &quot;Perisoreus infaustus&quot;, &quot;Zonotrichia capensis&quot;, &quot;Extraction control&quot;, &quot;Library control&quot;))) %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Taxon + Species + Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.title=element_blank(), panel.spacing = unit(0, &quot;lines&quot;)) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) sample_dist &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;dist&quot;) genome_counts_NMDS &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;dist&quot;) %&gt;% metaMDS(.,trymax = 999, k=2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;dataset&quot;) %&gt;% left_join(sample_metadata, by = join_by(dataset == dataset)) %&gt;% filter(Taxon != &quot;Control&quot;) %&gt;% group_by(Sample) %&gt;% mutate(sample_x=mean(NMDS1), sample_y=mean(NMDS2)) genome_counts_NMDS %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Species, shape=Extraction)) + scale_color_manual(values=vertebrate_colors) + geom_point(size=3, alpha=0.8) + geom_segment(aes(x=sample_x, y=sample_y, xend=NMDS1, yend=NMDS2), alpha=0.2) + theme_classic() + theme(legend.position=&quot;right&quot;, legend.box=&quot;vertical&quot;) + guides(color=guide_legend(title=&quot;Species&quot;)) "],["amphibians.html", "6 Amphibians 6.1 Calotriton asper 6.2 Lissotriton helveticus 6.3 Salamandra atra", " 6 Amphibians 6.1 Calotriton asper 6.1.1 Retrieve data species=&quot;Calotriton asper&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0121/DMB0121_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0121/DMB0121_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0121/DMB0121_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0121/DMB0121.tree.gz&quot;, &quot;data/DMB0121.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0121.tree.gz&quot;) 6.1.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 6.1.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 6.1.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_iduzaoce9wi3dz95j6s3xw, .table th.tinytable_css_iduzaoce9wi3dz95j6s3xw { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 107.0 51.75880 6.406283 EHEX 106.5 51.56757 6.311931 ZYMO 97.5 48.75158 6.219160 6.1.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id3prm2dz4qhq46p9lhz6w, .table th.tinytable_css_id3prm2dz4qhq46p9lhz6w { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.29497046 0.381599435 0.105560612 intra 0.03215577 0.007477988 0.001740429 6.1.6 Variance partitioning richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() tibble(species=rep(species,3),metric=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;),r2=c(richness,neutral,phylogenetic)) %&gt;% write_tsv(paste0(&quot;results/var_&quot;,genus,&quot;.tsv&quot;)) 6.2 Lissotriton helveticus 6.2.1 Retrieve data species=&quot;Lissotriton helveticus&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0124/DMB0124_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0124/DMB0124_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0124/DMB0124_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0124/DMB0124.tree.gz&quot;, &quot;data/DMB0124.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0124.tree.gz&quot;) 6.2.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 6.2.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 6.2.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_idjj356vc80ged2uesdmo8, .table th.tinytable_css_idjj356vc80ged2uesdmo8 { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 22 12.05083 4.439034 EHEX 22 12.15999 4.408855 ZYMO 21 10.73360 3.336904 6.2.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_idlgik3vcjlhxh58i7pt9s, .table th.tinytable_css_idlgik3vcjlhxh58i7pt9s { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.9090909 0.9487207 0.3681096 intra 0.2288066 0.1798833 0.1289869 6.2.6 Variance partitioning richness &lt;-genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() tibble(species=rep(species,3),metric=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;),r2=c(richness,neutral,phylogenetic)) %&gt;% write_tsv(paste0(&quot;results/var_&quot;,genus,&quot;.tsv&quot;)) 6.3 Salamandra atra 6.3.1 Retrieve data species=&quot;Salamandra atra&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0129/DMB0129_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0129/DMB0129_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0129/DMB0129_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0129/DMB0129.tree.gz&quot;, &quot;data/DMB0129.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0129.tree.gz&quot;) 6.3.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 6.3.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 6.3.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id0ftaamowhdayrkhw865q, .table th.tinytable_css_id0ftaamowhdayrkhw865q { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 70.0 35.33416 6.024485 EHEX 84.0 38.29817 6.183859 ZYMO 58.5 30.15278 5.653610 6.3.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_idi61nlycsbrz3sz4sp4sb, .table th.tinytable_css_idi61nlycsbrz3sz4sp4sb { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.3854701 0.3862921 0.125862853 intra 0.1422510 0.0315443 0.007370115 6.3.6 Variance partitioning richness &lt;-genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() tibble(species=rep(species,3),metric=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;),r2=c(richness,neutral,phylogenetic)) %&gt;% write_tsv(paste0(&quot;results/var_&quot;,genus,&quot;.tsv&quot;)) "],["birds.html", "7 Birds 7.1 Geospizopsis unicolor 7.2 Perisoreus infaustus 7.3 Zonotrichia capensis", " 7 Birds 7.1 Geospizopsis unicolor 7.1.1 Retrieve data species=&quot;Geospizopsis unicolor&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0123/DMB0123_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0123/DMB0123_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0123/DMB0123_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0123/DMB0123.tree.gz&quot;, &quot;data/DMB0123.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0123.tree.gz&quot;) 7.1.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 7.1.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 7.1.4 Alpha diversity Alpha diversity is not calculated as only one sample contains enough genome coverage to calculate diversity estimates. 7.1.5 Beta diversity Beta diversity is not calculated as only one sample contains enough genome coverage to calculate diversity estimates. 7.2 Perisoreus infaustus 7.2.1 Retrieve data species=&quot;Perisoreus infaustus&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0126/DMB0126_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0126/DMB0126_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0126/DMB0126_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0126/DMB0126.tree.gz&quot;, &quot;data/DMB0126.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0126.tree.gz&quot;) 7.2.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 7.2.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 7.2.4 Alpha diversity Alpha diversity is not calculated as only one sample contains enough genome coverage to calculate diversity estimates. 7.2.5 Beta diversity Beta diversity is not calculated as only one sample contains enough genome coverage to calculate diversity estimates. 7.3 Zonotrichia capensis The number of reconstructed genomes was too low for community analyses. "],["mammals.html", "8 Mammals 8.1 Plecotus auritus 8.2 Sciurus carolinensis 8.3 Trichosurus vulpecula", " 8 Mammals 8.1 Plecotus auritus 8.1.1 Retrieve data species=&quot;Plecotus auritus&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0127/DMB0127_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0127/DMB0127_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0127/DMB0127_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0127/DMB0127.tree.gz&quot;, &quot;data/DMB0127.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0127.tree.gz&quot;) 8.1.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 8.1.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 8.1.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_ida7v390zkgzp3h5t5435y, .table th.tinytable_css_ida7v390zkgzp3h5t5435y { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 12.5 5.070885 2.691939 EHEX 11.5 5.348040 2.739107 ZYMO 6.5 4.042292 2.282549 8.1.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id31jmujvvnvkrc1mhlb3x, .table th.tinytable_css_id31jmujvvnvkrc1mhlb3x { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.6727759 0.82731396 0.68954392 intra 0.2123748 0.03113448 0.01336019 8.1.6 Variance partitioning richness &lt;-genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() tibble(species=rep(species,3),metric=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;),r2=c(richness,neutral,phylogenetic)) %&gt;% write_tsv(paste0(&quot;results/var_&quot;,genus,&quot;.tsv&quot;)) 8.2 Sciurus carolinensis 8.2.1 Retrieve data species=&quot;Sciurus carolinensis&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0130/DMB0130_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0130/DMB0130_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0130/DMB0130_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0130/DMB0130.tree.gz&quot;, &quot;data/DMB0130.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0130.tree.gz&quot;) 8.2.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 8.2.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 8.2.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_idbyusoy2ynwye0hm5nx72, .table th.tinytable_css_idbyusoy2ynwye0hm5nx72 { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 95.0 39.66320 5.557244 EHEX 96.0 47.74310 5.728024 ZYMO 107.5 59.13437 6.138243 8.2.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id84lqbj4fj4jkbxmpx87t, .table th.tinytable_css_id84lqbj4fj4jkbxmpx87t { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.4447768 0.6554629 0.19033972 intra 0.1823044 0.1211974 0.03562178 8.2.6 Variance partitioning richness &lt;-genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() tibble(species=rep(species,3),metric=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;),r2=c(richness,neutral,phylogenetic)) %&gt;% write_tsv(paste0(&quot;results/var_&quot;,genus,&quot;.tsv&quot;)) 8.3 Trichosurus vulpecula 8.3.1 Retrieve data species=&quot;Trichosurus vulpecula&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0131/DMB0131_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0131/DMB0131_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0131/DMB0131_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0131/DMB0131.tree.gz&quot;, &quot;data/DMB0131.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0131.tree.gz&quot;) 8.3.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 8.3.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 8.3.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_idkmdz31zkmr52wiqje2ie, .table th.tinytable_css_idkmdz31zkmr52wiqje2ie { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 50.5 21.91494 5.924827 EHEX 72.0 28.43487 7.338228 ZYMO 67.5 28.14959 6.253726 8.3.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id27kka5no6j2nlhxztiet, .table th.tinytable_css_id27kka5no6j2nlhxztiet { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.3673634 0.55492808 0.26261760 intra 0.1050321 0.02750575 0.01017398 8.3.6 Variance partitioning Variance partitioning was not conducted because EHI02106 failed to yield any data. "],["reptiles.html", "9 Reptiles 9.1 Chalcides striatus 9.2 Natrix astreptophora 9.3 Podarcis muralis", " 9 Reptiles 9.1 Chalcides striatus 9.1.1 Retrieve data species=&quot;Chalcides striatus&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0122/DMB0122_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0122/DMB0122_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0122/DMB0122_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0122/DMB0122.tree.gz&quot;, &quot;data/DMB0122.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0122.tree.gz&quot;) 9.1.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 9.1.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 9.1.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id74yo6qruqy0qfj8p79mx, .table th.tinytable_css_id74yo6qruqy0qfj8p79mx { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 60.5 31.68716 5.314585 EHEX 64.5 34.15145 5.180680 ZYMO 74.0 37.04400 5.254353 9.1.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_idcs5avidzkmstci2emqdc, .table th.tinytable_css_idcs5avidzkmstci2emqdc { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.4109306 0.45373698 0.09334837 intra 0.1286148 0.06449944 0.02626687 9.1.6 Variance partitioning richness &lt;-genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() tibble(species=rep(species,3),metric=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;),r2=c(richness,neutral,phylogenetic)) %&gt;% write_tsv(paste0(&quot;results/var_&quot;,genus,&quot;.tsv&quot;)) 9.2 Natrix astreptophora 9.2.1 Retrieve data species=&quot;Natrix astreptophora&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0125/DMB0125_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0125/DMB0125_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0125/DMB0125_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0125/DMB0125.tree.gz&quot;, &quot;data/DMB0125.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0125.tree.gz&quot;) 9.2.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 9.2.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 9.2.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_idcj0qhb5v4ldfu4xhvydj, .table th.tinytable_css_idcj0qhb5v4ldfu4xhvydj { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 37.5 16.30449 3.270384 EHEX 29.5 15.34095 3.211162 ZYMO 24.0 13.43764 3.065722 9.2.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id91x4jh77chhv24xynu56, .table th.tinytable_css_id91x4jh77chhv24xynu56 { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.5386629 0.65025916 0.18128644 intra 0.2756370 0.04665216 0.01166948 9.2.6 Variance partitioning richness &lt;-genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() tibble(species=rep(species,3),metric=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;),r2=c(richness,neutral,phylogenetic)) %&gt;% write_tsv(paste0(&quot;results/var_&quot;,genus,&quot;.tsv&quot;)) 9.3 Podarcis muralis 9.3.1 Retrieve data species=&quot;Podarcis muralis&quot; genus=strsplit(species, &quot; &quot;)[[1]][1] %&gt;% tolower() sample_metadata &lt;- read_tsv(paste0(&quot;data/metadata.tsv&quot;)) %&gt;% rename(dataset=Dataset) %&gt;% filter(Species == species) read_counts &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0128/DMB0128_counts.tsv.gz&quot;) %&gt;% rename(genome = 1) genome_metadata &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0128/DMB0128_mag_info.tsv.gz&quot;) %&gt;% rename(genome = 1, length=mag_size) genome_coverage &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0128/DMB0128_coverage.tsv.gz&quot;) %&gt;% rename(genome = 1) download.file(&quot;https://sid.erda.dk/share_redirect/BaMZodj9sA/DMB/DMB0128/DMB0128.tree.gz&quot;, &quot;data/DMB0128.tree.gz&quot;) genome_tree &lt;- read_tree(&quot;data/DMB0128.tree.gz&quot;) 9.3.2 Filter data #Filter by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Transform to genome counts (non-filtered) readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Transform to genome counts (coverage-filtered) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 9.3.3 Community barplot # Retrieve EHI taxonomy colors phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() # Stacked barplot genome_counts %&gt;% mutate_at(vars(-genome), funs(./sum(., na.rm = TRUE))) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;dataset&quot;, values_to = &quot;count&quot;) %&gt;% left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append taxonomy left_join(., sample_metadata, by = join_by(dataset == dataset)) %&gt;% #append taxonomy mutate(Extraction=factor(Extraction,levels=c(&quot;ZYMO&quot;,&quot;DREX&quot;,&quot;EHEX&quot;))) %&gt;% ggplot(., aes(x=dataset,y=count,fill=phylum, group=phylum))+ #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1)+ #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(y = &quot;Relative abundance&quot;) + facet_nested(. ~ Sample + Extraction, scales=&quot;free_x&quot;) + guides(fill = guide_legend(ncol = 3)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.position=&quot;none&quot;, legend.title=element_blank()) ggsave(paste0(&quot;figures/barplot_&quot;,genus,&quot;.pdf&quot;)) 9.3.4 Alpha diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;dataset&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(dataset==dataset)) %&gt;% full_join(phylogenetic,by=join_by(dataset==dataset)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(paste0(&quot;results/alpha_&quot;,genus,&quot;.tsv&quot;)) # Print alpha diversity alpha_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(dataset==dataset)) %&gt;% group_by(Extraction) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id6hm3b9tsn8qmndfvcfgn, .table th.tinytable_css_id6hm3b9tsn8qmndfvcfgn { border-bottom: solid 0.1em #d3d8dc; } Extraction richness neutral phylogenetic DREX 80.5 33.09492 4.689994 EHEX 73.0 32.71816 4.716865 ZYMO 78.5 34.42602 4.745518 9.3.5 Beta diversity #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness %&gt;% full_join(neutral,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write beta diversities beta_diversity %&gt;% write_tsv(paste0(&quot;results/beta_&quot;,genus,&quot;.tsv&quot;)) # Print beta diversities beta_diversity %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(first==dataset)) %&gt;% left_join(sample_metadata %&gt;% select(dataset,Extraction,Sample),by=join_by(second==dataset)) %&gt;% mutate(relationship = case_when( Extraction.x == Extraction.y &amp; Sample.x != Sample.y ~ &quot;inter&quot;, Extraction.x != Extraction.y &amp; Sample.x == Sample.y ~ &quot;intra&quot;, TRUE ~ NA_character_ # Handle other cases if needed )) %&gt;% filter(relationship != is.na(relationship)) %&gt;% group_by(relationship) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() .table td.tinytable_css_id71ylfavlowilz43yhm9y, .table th.tinytable_css_id71ylfavlowilz43yhm9y { border-bottom: solid 0.1em #d3d8dc; } relationship richness neutral phylogenetic inter 0.2864067 0.41508917 0.122770382 intra 0.0446703 0.00905735 0.003367558 9.3.6 Variance partitioning richness &lt;-genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;) %&gt;% as.dist() %&gt;% adonis2(formula = . ~ Sample + Extraction, data = sample_metadata %&gt;% arrange(match(dataset,colnames(genome_counts_filt))), permutations = 999, method = &quot;bray&quot;, sqrt.dist = TRUE) %&gt;% broom::tidy() %&gt;% filter(term == &quot;Model&quot;) %&gt;% select(R2) %&gt;% pull() tibble(species=rep(species,3),metric=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;),r2=c(richness,neutral,phylogenetic)) %&gt;% write_tsv(paste0(&quot;results/var_&quot;,genus,&quot;.tsv&quot;)) "],["sample-digestion.html", "10 Sample homogeneisation and digestion 10.1 Instruments, plasticware and reagents 10.2 Protocol", " 10 Sample homogeneisation and digestion Homogenisation and digestion of biological samples like faeces or intestinal contents are crucial steps in the process of DNA extraction. These steps help break down the complex matrix of the sample, thus separating different compounds and molecules from each other. Faeces, for example, are composed of a heterogeneous mixture of materials, including undigested food, microbial cells, host cells, and waste products. This complex matrix can make it challenging to access and extract DNA. Homogenisation involves breaking down the solid and semi-solid components of the sample, creating a more uniform mixture that is easier to work with, while digestion also entails degrading cellular structures to release intracellular compounds to the matrix. The EHI samples are stored in a buffer that serves a dual purpose as both a preservative and a digestion buffer. The buffer facilitates the release of nucleic acids from cells and tissues through breaking down cellular membranes and structures. The EHI protocol also includes bead-beating using a combination of ceramic, silica and glass beads for sample homogenisation. The mechanical force generated by the beads’ movement and collision with the sample causes physical disruption, breaking apart cells and releasing their contents into the surrounding solution. Optimisation of bead-beating conditions is necessary to balance efficient disruption with minimal degradation, as depending on the sample, bead types, and shearing time, there is a potential risk of shearing or damaging sensitive biomolecules. 10.1 Instruments, plasticware and reagents Instruments Bead mill/beater homogenizer e.g. TissueLyser II (Qiagen) Analytical balance (for tissue sample) Block Heater-Shaker e.g. ThermoMixer C (Eppendorf) (for tissue sample) SAFE® Screw Cap De-/Capper (LVL technologies) SAFE® 2D/1D Code Reader (LVL technologies) Plasticware Item Brand Catalogue number Lysing Matrix E 96-Well Plate MP Biomedicals 116984001-CF Polystyrene Tweezer (Single packed disposable sterile) Megro Carbon steel surgical scalpel blades (Single packed sterile) 1C-X10-BL-CW-B-S LX 1000 - 2D Biobanking Tubes LVL technologies 1C-X10-BL-CW-B-S Reagents Reagent | Brand | Catalogue number | Storage | UltraPure™ 1M Tris Hydrochloride, Tris-HCI | Invitrogen | 15568025 | 4 ºC | UltraPure™ 0.5M Ethylenediaminetetraacetic acid, EDTA | Invitrogen | 15575-038 | 25 ºC | BioUltra Sodium dodecyl sulfate solution, SDS | Sigma Aldrich | 71736 | 25 ºC | Proteinase K 20 mg/ml | Roche | 3115828001 | 4 ºC | 10.2 Protocol Faeces and swabs Thaw the samples and ensure samples have entirely thawed. Spin down or gently centrifuge tubes briefly to remove any liquid from the lid. Add the content of 1 well of the Lysing Matrix E 96-Well Plate to each collection tube. Vortex to ensure that the beads are moving in each sample. If beads are not moving despite vortexing, it is an indication of overstuffing the sample. Consider using a sterile pipet tip to attempt unclogging the beads. Homogenise the sample with the TissueLyser for two rounds of 6 minutes at max speed (=30 Hz). Spin down or centrifuge the tubes at 2,2 g/rcf for 1 minute. Ensure no foam is present on the tube’s lids. Otherwise, repeat centrifugation. Gently transfer the supernatant to an LX 1000 LVL tube without disturbing the pellet+beads. Tissue samples Extract the tissue from the original preservation tube, dry it out and weight it on a sterile weighing boat. If the tissue sample is heavier than 10 mg, cut a portion using a sterile scalpel and place it in an Eppendorf tube Add 250 μl of SDS lysis buffer solution to the tube and 25 μl of proteinase K. Incubation overnight at 56°C on a a thermoshaker. Centrifuge/Spin Down** the tubes at 2,2 g/rcf for 1 minutes. Ensure no foam is present on the tube’s lids. Otherwise, repeat centrifugation. Transfer the digested sample to an LX 1000 LVL tube. "],["Zymo-dna-extraction.html", "11 ZYMO DNA extraction 11.1 Instruments, plasticware and reagents 11.2 Protocol", " 11 ZYMO DNA extraction DNA extraction involves isolating DNA molecules from the rest of organic materials in the mixture, as well as removing inhibitors such as polysaccharides, proteins and bile salts, which can affect downstream enzymatic reactions, such as adaptor ligation or PCR amplification. The DNA extraction procedure employed in the EHI involves DNA isolation using silica magnetic beads combined with solid-phase reversible immobilisation (SPRI) to remove as many inhibitors as possible. This technique takes advantage of the binding properties of silica magnetic beads to selectively capture DNA fragments, followed by the principle of SPRI to efficiently remove impurities and elute the purified DNA. 11.1 Instruments, plasticware and reagents Instruments Block Heater-Shaker such as ThermoMixer C (Eppendorf) (for tissue sample) Magnet compatible with V-Bottom 96-well plates such as Magnum™ EX Universal 96-well Magnet Plate (Alpaca, SKU: A000380) Fluorometer such as Qubit Flex Fluorometer (Invitrogen) SAFE® Screw Cap De-/Capper (LVL technologies) SAFE® 2D/1D Code Reader (LVL technologies) Plasticware Item Brand Catalogue number 96-well V-shaped 1ml microplate 4titude 4ti-0125 XSX 200 - 2D Biobanking Tubes LVL technologies 1C-X02-BL-CW-B-L Self-adhesive aluminium foil LVL technologies AF100Plus Thin-walled polypropylene tubes with very low fluorescence compatible with Fluorometer such as Qubit Flex Assay Tube Strips Invitrogen Q33252 Stock reagents Reagent Brand Catalogue number Storage Deionized ultrapure water (ddH2O) Bionordika BN-51100 25 ºC ZymoBIOMICS MagBead DNA/RNA Zymo Research R2135/R2136 25 ºC Qubit DNA HS Assay Kit Invitrogen Q32851 4 ºC Qubit DNA BR Assay Kit Invitrogen Q32850 4 ºC 11.2 Protocol Total Nucleic Acid Purification Add 200 µl (1 volume) DNA/RNA Lysis Buffer to 200 µl sample and mix well. Add 400 µl ethanol (95-100%) to the sample and mix well. Add 30 µl ZymoBIOMICS™ MagBinding Beads* and mix well for 20 minutes (21ºC, 1000 rpm). *ZymoBIOMICS™ MagBinding Beads settle quickly, ensure that beads are kept in suspension while dispensing. Transfer the plate/tube to the magnetic stand2 until beads have pelleted, then aspirate and discard the cleared supernatant. Add 500 µl MagBead DNA/RNA Wash 1 and mix well. Pellet the beads and discard the supernatant. Add 500 µl MagBead DNA/RNA Wash 2 and mix well. Pellet the beads and discard the supernatant. Add 500 µl ethanol (95-100%) and mix well. Pellet the beads and discard the supernatant. Repeat step 7. Dry the beads for 10 minutes or until dry. To elute DNA/RNA from the beads, add 50 µl ZymoBIOMICS™ DNase/RNase-Free Water and mix well for 5 minutes. Transfer the plate/tube to the magnetic stand until beads have pelleted, then aspirate and dispense the eluted DNA/RNA to a new plate/tube. The eluted DNA/RNA can be used immediately or stored frozen. Use 2 µl to selectively quantify DNA using the Qubit DNA HS or BR Assay Kit and a Qubit Fluorometer. Place the plate on the magnetic rack. Transfer the Nucleic Acid extract to a 200 µl LVL tube. Store the 200 µl LVL tube plate at -80ºC until further processing. "],["drex-dna-extraction.html", "12 DREX DNA extraction 12.1 Instruments, plasticware and reagents 12.2 Preparation of working reagents 12.3 Protocol", " 12 DREX DNA extraction DNA extraction involves isolating DNA molecules from the rest of organic materials in the mixture, as well as removing inhibitors such as polysaccharides, proteins and bile salts, which can affect downstream enzymatic reactions, such as adaptor ligation or PCR amplification. The DNA extraction procedure employed in the EHI involves DNA isolation using silica magnetic beads combined with solid-phase reversible immobilisation (SPRI) to remove as many inhibitors as possible. This technique takes advantage of the binding properties of silica magnetic beads to selectively capture DNA fragments, followed by the principle of SPRI to efficiently remove impurities and elute the purified DNA. 12.1 Instruments, plasticware and reagents Instruments Block Heater-Shaker such as ThermoMixer C (Eppendorf) (for tissue sample) Magnet compatible with V-Bottom 96-well plates such as Magnum™ EX Universal 96-well Magnet Plate (Alpaca, SKU: A000380) Fluorometer such as Qubit Flex Fluorometer (Invitrogen) SAFE® Screw Cap De-/Capper (LVL technologies) SAFE® 2D/1D Code Reader (LVL technologies) Plasticware Item Brand Catalogue number Millex-GP 0.22 µm Syringe Filter Millipore SLGV013SL Syringe (Single packed disposable sterile) 96-well V-shaped 1ml microplate 4titude 4ti-0125 XSX 200 - 2D Biobanking Tubes LVL technologies 1C-X02-BL-CW-B-L Self-adhesive aluminium foil LVL technologies AF100Plus Thin-walled polypropylene tubes with very low fluorescence compatible with Fluorometer such as Qubit Flex Assay Tube Strips Invitrogen Q33252 Stock reagents Reagent Brand Catalogue number Storage Deionized ultrapure water (ddH2O) Bionordika BN-51100 25 ºC Absolute ethanol, EtOH 25 ºC BioUltra Citric acid Sigma-Aldrich 27487 25 ºC BioUltra Citrate Concentrate Solution (1M) Sigma-Aldrich 83273-250ML-F 25 ºC Guanidine thiocyanate (GuSCN) Sigma-Aldrich G9277 25 ºC N-Lauroylsarcosine sodium salt solution Sigma-Aldrich L7414-50ML RT BioReagent 2-Isopropanol  Sigma-Aldrich I9516-500ML 25 ºC Hydrochloric acid solution (1M), HCl Sigma-Aldrich 25 ºC BioUltra Sodium Hydroxide solution (10M), NaOH Sigma-Aldrich 72068-100ML 25 ºC TWEEN® 20 Sigma-Aldrich P9416-50ML 25 ºC Silica magnetic beads G-Biosciences 786-916 4ºC Elution Buffer (EB) Qiagen 19086 25 ºC Qubit DNA HS Assay Kit Invitrogen Q32851 4 ºC Qubit DNA BR Assay Kit Invitrogen Q32850 4 ºC 12.2 Preparation of working reagents Citrate buffer (0.1 M, ph 5.0) To prepare a stock of 50ml: In a 50 mL centrifuge tube, prepare Citric acid stock solution (1 M) by dissolving 9.60 g of citric acid powder (molecular weight = 192.12 g/mol) in H2O to a final volume of 50 mL. In a 50 mL centrifuge tube, dilute Citric acid stock solution 1:10 to reach a 0.1 M solution with H2O. In a 50 mL centrifuge tube, dilute Trisodium citrate/Citrate Concentrate solution (1 M) 1:10 to reach a 0.1 M solution with H2O. In a 50 mL centrifuge tube, combine 17.5 mL of Citric acid solution (0.1 M) with 32.5 mL of Trisodium citrate/Citrate Concentrate solution (0.1 M). Check that pH is around 5.0 and adjust if needed using NAOH (10M). Buffer B To prepare a stock of 50ml: Weigh 29.54 g of Guanidine thiocyanate (GuSCN) using a large weighing boat. Add the GuSCN to a sterile PC or glass bottle (150 mL). Add 20 mL H2O, 5 mL of Citrate buffer (0.1 M) and a sterile stirring bar. Place the solution (approximately 45 mL) on the magnetic stirrer to dissolve completely. Add 2.5 mL of N-Lauroylsarcosine sodium salt solution (20%, pH 7-9). Add H2O to a final volume of 50 mL. Filter with a 0.22 µm Syringe Filter. Check that pH is around 5.0 and adjust if needed using NAOH (10M). Buffer C - DNA fraction To prepare a stock of 50ml: Weigh 11.82 g of Guanidine thiocyanate (GuSCN) using a large weighing boat. Add the GuSCN to a sterile PC or glass bottle (150 mL). Add 5 mL H2O, 5 mL of Citrate buffer (0.1 M) and a sterile stirring bar. Place the solution on the magnetic stirrer to dissolve completely. Add 30 mL of Isopropanol (2-Propanol). Add 25 µl of Tween20. Filter with a 0.22 µm Syringe Filter. Filter slowly to avoid filter overflowing. Check that pH is around 5.0 and adjust if needed using NAOH (10M). EBT buffer To prepare a stock of 50ml: In a 50 mL centrifuge tube, mix 50 ml of EB buffer with 25 µl of Tween20. Silica magnetic beads and buffer aliquots Switch on the Thermo Mixer and set to 15 minutes, 10 C, 1500 rpm [See ‘Protocol’ step 5]. Equilibrate* the silica magnetic beads to room temperature for 30 min. Create the aliquots of reagents needed according to the table below. Prepare reagents for around 10% overage samples. Ensure that beads are thoroughly resuspended before taking an aliquot. Working reagent Volume per sample Beads - DNA fraction 15 µl Buffer B 200 µl Buffer C - DNA fraction 200 µl 80% EtOH - DNA washing 400 µl Place the tube containing silica beads on a magnetic rack and wait until the beads are immobilised on the wall, and the supernatant is clear. Discard the clear supernatant. Add 2 mL of Tris-EDTA (TE) buffer to the tube. The TE buffer volume may be reduced according to the volume of the beads needed. The beads must be submerged during the wash step. Discard the supernatant. Repeat steps 6 and 7. Transfer “Beads - DNA fraction” to Buffer B. Mix well (by vortexing if you can avoid bubbles) the mixture “Beads - Buffer B”. *Store the silica magnetic beads (G-Biosciences) at 4°C. Do not freeze the silica magnetic beads (G-Biosciences) or store them near a magnetic source. 12.3 Protocol Ensure that the mixture “Beads - Buffer B” is properly mixed. Transfer 200 µl of the mixture to each well of the Deep Well microplate. Ensure samples have entirely thawed. Vortex and centrifuge/spin down the LVL rack for 30 seconds to remove any liquid from the LVL tube lid. Transfer 200 μL of each sample to the Deep Well microplate (from now refered to DNA plate). Seal the DNA plate with a self-adhesive aluminium foil and spin down. Incubate DNA plate: for 15 minutes at 10ºC with shaking at 1500 rpm. Spin down shortly at 1000 g. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Discard the supernatant. Remove the DNA plate from the magnet. Add 200 µl of Buffer C to each well and mix well by pipetting. Cover the DNA plate with an aluminium seal and spin down shortly. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Discard the supernatant. Remove the DNA plate from the magnet. Add 200 µl of 80% EtOH and mix well by pipetting. Place the DNA plate on the magnetic rack and wait until the supernatant is clear. Discard the supernatant. Repeat step 9, briefly spin down the plate to bring EtOH residues down and repeat step 10. Ensure that all residual ethanol is removed. Dry the beads for at least 5 minutes. Remove the DNA plate from the magnet. Add 50 µl of EBT buffer. Cover the DNA plate with an aluminium seal and spin down shortly. Incubate DNA plate: 5 minutes at 25 ºC with shaking at 1500 rpm. Spin down the DNA plate shortly at 1000 g. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Aspirate slowly (to avoid bead transfer) and transfer the supernatant with eluted DNA to a new plate. Use 2 µl to selectively quantify DNA using the Qubit DNA HS or BR Assay Kit and a Qubit Fluorometer. Place the plate on a magnetic rack. Transfer the DNA extract to a 200 µl LVL tube. Store the 200 µl LVL tube plate at -20ºC until further processing. "],["ehex-dna-extraction.html", "13 EHEX DNA extraction 13.1 Instruments, plasticware and reagents 13.2 Preparation of working reagents 13.3 Protocol", " 13 EHEX DNA extraction DNA extraction involves isolating DNA molecules from the rest of organic materials in the mixture, as well as removing inhibitors such as polysaccharides, proteins and bile salts, which can affect downstream enzymatic reactions, such as adaptor ligation or PCR amplification. The DNA extraction procedure employed in the EHI involves DNA isolation using silica magnetic beads combined with solid-phase reversible immobilisation (SPRI) to remove as many inhibitors as possible. This technique takes advantage of the binding properties of silica magnetic beads to selectively capture DNA fragments, followed by the principle of SPRI to efficiently remove impurities and elute the purified DNA. 13.1 Instruments, plasticware and reagents Instruments Block Heater-Shaker such as ThermoMixer C (Eppendorf) (for tissue sample) Magnet compatible with V-Bottom 96-well plates such as Magnum™ EX Universal 96-well Magnet Plate (Alpaca, SKU: A000380) Fluorometer such as Qubit Flex Fluorometer (Invitrogen) SAFE® Screw Cap De-/Capper (LVL technologies) SAFE® 2D/1D Code Reader (LVL technologies) Plasticware Item Brand Catalogue number Millex-GP 0.22 µm Syringe Filter Millipore SLGV013SL Syringe (Single packed disposable sterile) 96-well V-shaped 1ml microplate 4titude 4ti-0125 XSX 200 - 2D Biobanking Tubes LVL technologies 1C-X02-BL-CW-B-L Self-adhesive aluminium foil LVL technologies AF100Plus Thin-walled polypropylene tubes with very low fluorescence compatible with Fluorometer such as Qubit Flex Assay Tube Strips Invitrogen Q33252 Stock reagents Reagent Brand Catalogue number Storage Deionized ultrapure water (ddH2O) Bionordika BN-51100 25 ºC Absolute ethanol, EtOH 25 ºC BioUltra Citric acid Sigma-Aldrich 27487 25 ºC BioUltra Citrate Concentrate Solution (1M) Sigma-Aldrich 83273-250ML-F 25 ºC Guanidine thiocyanate (GuSCN) Sigma-Aldrich G9277 25 ºC BioReagent 2-Isopropanol  Sigma-Aldrich I9516-500ML 25 ºC Hydrochloric acid solution (1M), HCl Sigma-Aldrich 25 ºC BioUltra Sodium Hydroxide solution (10M), NaOH Sigma-Aldrich 72068-100ML 25 ºC TWEEN® 20 Sigma-Aldrich P9416-50ML 25 ºC Silica magnetic beads G-Biosciences 786-916 4ºC Elution Buffer (EB) Qiagen 19086 25 ºC Qubit DNA HS Assay Kit Invitrogen Q32851 4 ºC Qubit DNA BR Assay Kit Invitrogen Q32850 4 ºC 13.2 Preparation of working reagents Citrate buffer (0.1 M, ph 5.0) To prepare a stock of 50ml: In a 50 mL centrifuge tube, prepare Citric acid stock solution (1 M) by dissolving 9.60 g of citric acid powder (molecular weight = 192.12 g/mol) in H2O to a final volume of 50 mL. In a 50 mL centrifuge tube, dilute Citric acid stock solution 1:10 to reach a 0.1 M solution with H2O. In a 50 mL centrifuge tube, dilute Trisodium citrate/Citrate Concentrate solution (1 M) 1:10 to reach a 0.1 M solution with H2O. In a 50 mL centrifuge tube, combine 17.5 mL of Citric acid solution (0.1 M) with 32.5 mL of Trisodium citrate/Citrate Concentrate solution (0.1 M). Check that pH is around 5.0 and adjust if needed using NAOH (10M). Buffer C - DNA fraction To prepare a stock of 50ml: Weigh 11.82 g of Guanidine thiocyanate (GuSCN) using a large weighing boat. Add the GuSCN to a sterile PC or glass bottle (150 mL). Add 5 mL H2O, 5 mL of Citrate buffer (0.1 M) and a sterile stirring bar. Place the solution on the magnetic stirrer to dissolve completely. Add 30 mL of Isopropanol (2-Propanol). Add 25 µl of Tween20. Filter with a 0.22 µm Syringe Filter. Filter slowly to avoid filter overflowing. Check that pH is around 5.0 and adjust if needed using NAOH (10M). EBT buffer To prepare a stock of 50ml: In a 50 mL centrifuge tube, mix 50 ml of EB buffer with 25 µl of Tween20. Silica magnetic beads and buffer aliquots Switch on the Thermo Mixer and set to 15 minutes, 10 C, 1500 rpm [See ‘Protocol’ step 5] Equilibrate* the silica magnetic beads to room temperature for 30 min. Create the aliquots of reagents needed according to the table below. Prepare reagents for around 10% overage samples. Ensure the beads are thoroughly resuspended before taking an aliquot. Working reagent Volume per sample Beads - DNA fraction 15 µl Buffer C 200 µl 80% EtOH - DNA washing 400 µl Place the tube containing silica beads on a magnetic rack and wait until the beads are immobilised on the wall, and the supernatant is clear. Discard the clear supernatant. Add 2 mL of Tris-EDTA (TE) buffer to the tube. The TE buffer volume may be reduced according to the volume of the beads needed. The beads must be submerged during the wash step. Discard the supernatant. Repeat steps 6 and 7. Transfer “Beads - DNA fraction” to Buffer C. Mix well by vortexing (avoid bubbles if possible)”. *Store the silica magnetic beads (G-Biosciences) at 4°C. Do not freeze the silica magnetic beads (G-Biosciences) or store them near a magnetic source. 13.3 Protocol Ensure that the mixture “Beads - Buffer B” is properly mixed. Transfer 200 µl of the mixture to each well of the Deep Well microplate. Ensure samples have entirely thawed. Vortex and centrifuge/spin down the LVL rack for 30 seconds to remove any liquid from the LVL tube lid. Transfer 200 μL of each sample to the Deep Well microplate (from now refered to DNA plate). Seal the DNA plate with a self-adhesive aluminium foil and spin down. Incubate DNA plate: for 15 minutes at 10ºC with shaking at 1500 rpm. Spin down at 1000 g. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Discard the supernatant. Remove the DNA plate from the magnet. Add 200 µl of 80% EtOH and mix well by pipetting. Place the DNA plate on the magnetic rack and wait until the supernatant is clear. Discard the supernatant. Repeat step 7, briefly spin down the plate to bring EtOH residues down and repeat step 8. Ensure that all residual ethanol is removed. Dry the beads for at least 5 minutes. Remove the DNA plate from the magnet. Add 50 µl of EBT buffer. Cover the DNA plate with an aluminium seal and spin down shortly. Incubate DNA plate: 5 minutes at 25 ºC with shaking at 1500 rpm. Spin down the DNA plate shortly at 1000 g. Place the DNA plate on a magnetic rack and wait until the supernatant is clear. Aspirate slowly (to avoid bead transfer) and transfer the supernatant with eluted DNA to a new plate. Use 2 µl to selectively quantify DNA using the Qubit DNA HS or BR Assay Kit and a Qubit Fluorometer. Place the plate on a magnetic rack. Transfer the DNA extract to a 200 µl LVL tube. Use 2 µl to selectively quantify DNA using the Qubit DNA HS or BR Assay Kit and a Qubit Fluorometer. Store the 200 µl LVL tube plate at -20ºC until further processing. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
